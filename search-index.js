var searchIndex = new Map(JSON.parse('[\
["cairo_native",{"doc":"Cairo Sierra to MLIR compiler and JIT engine","t":"PPFPPGNNNNNNCNNNNNNHCCNNNNNNNCCCNNNNNNNNNCCCHHNNNNNNNNNNNNNNNCNNNNNNNNNNCNNNNCCNNPEPEGCNNNNNNNCNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNOONNOONNNNNNNNNNNNNNOONNNNNNOONNNNNNNNEEEECCCCIPFGPPPPPNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOOOFGPPPPPPIPPNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOOPPFGPPPPPPPPIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNPFGPPPPPPPIPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNFFFNNNONNNNNNONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNPFFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGRPKFPNCNCCCNNNNCNCMCCNNNCNCCCCCCCNNNCCHNNNMCCCCNNNNNNNNNNNNNNCCCCCCCCNNNNNNNNCCCCCCCCCNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHFNNCNCNNCNNNNNNCCNNNNNNNNCCCCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNPPFFGFPNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNFPFFFPFFFKIFFFNNNNNNNNNNOOOOOOONNNNNNNNNNNNNNNNNNNNMOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONMNNNNNNNMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNONNNNNNNNNNMMOOOOOOOONNNNNNNONMOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMMMMMMMMONNNNNNNNNNNNNNNNNNNOOMMONNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOOORKFNCNCNNCCMMMCCNNNCCCCNNNNNNCCCMNNCNNMNMMMMMMNCCCCCNNNNNNNCNCCCCNNNNCCCCCCCNNMNHHHHHHHHHIHHHFFNNNNHNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHHHHHHHHHHHHHHHHHHHHHFKSNNNMMHNNHHNNNNNNHHHHHHNNNHHNHHHHHNNNNNNNHNNNNNNNNNPPPPPPPGPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOO","n":["Aggressive","Default","LLVMCompileError","Less","None","OptLevel","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","cache","clone","clone","clone_into","clone_into","cmp","compare","compile","context","debug_info","default","eq","equivalent","equivalent","equivalent","equivalent","equivalent","error","execution_result","executor","fmt","fmt","fmt","from","from","get_hash","hash","into","into","libfuncs","metadata","module","module_to_object","object_to_shared_lib","partial_cmp","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","starknet","to_owned","to_owned","to_smolstr","to_string","try_from","try_from","try_into","try_into","type_id","type_id","types","upcast","upcast","upcast_mut","upcast_mut","utils","values","vzip","vzip","Aot","AotProgramCache","Jit","JitProgramCache","ProgramCache","aot","borrow","borrow_mut","fmt","from","from","from","into","jit","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","AotProgramCache","borrow","borrow_mut","compile_and_insert","fmt","from","get","into","new","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","JitProgramCache","borrow","borrow_mut","compile_and_insert","context","fmt","from","get","into","new","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","NativeContext","borrow","borrow_mut","compile","compile_with_metadata","default","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","initialize_mlir","into","new","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","DebugInfo","DebugLocations","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","extract","extract","fmt","fmt","from","from","funcs","funcs","into","into","libfunc_declarations","libfunc_declarations","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","statements","statements","to_owned","to_owned","try_from","try_from","try_into","try_into","type_declarations","type_declarations","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","CompileError","CoreLibfuncBuilderError","CoreTypeBuilderError","JitRunnerError","compile","jit_engine","libfuncs","types","CompileError","EditStateError","Error","ErrorImpl","GasMetadataError","LibfuncBuilderError","MlirError","ProgramRegistryError","TypeBuilderError","borrow","borrow","borrow_mut","borrow_mut","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","make_libfunc_builder_error","make_type_builder_error","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","source","source","source","to_smolstr","to_smolstr","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","error","error","libfunc_id","type_id","Error","ErrorImpl","InsufficientGasError","LayoutError","MissingParameter","MissingSyscallHandler","MlirError","ProgramRegistryError","RunnerError","TypeBuilderError","UnexpectedValue","borrow","borrow","borrow_mut","borrow_mut","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","make_missing_parameter","make_type_builder_error","make_unexpected_value_error","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","source","source","source","to_smolstr","to_smolstr","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","error","type_id","CompileError","Err","Error","ErrorImpl","LayoutError","LayoutErrorPolyfill","MissingMetadata","MlirError","Ok","ParseAttributeError","ProgramRegistryError","ProgramRegistryErrorBoxed","Result","SierraAssert","TryFromIntError","borrow","borrow","borrow_mut","borrow_mut","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","source","source","source","to_smolstr","to_smolstr","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","Err","Error","ErrorImpl","LayoutError","LayoutErrorPolyfill","LibFuncError","MlirError","Ok","ProgramRegistryError","ProgramRegistryErrorBoxed","Result","TryFromIntError","borrow","borrow","borrow_mut","borrow_mut","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","source","source","source","to_smolstr","to_smolstr","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","BuiltinStats","ContractExecutionResult","ExecutionResult","__clone_box","__clone_box","__clone_box","bitwise","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","builtin_stats","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","default","default","deserialize","deserialize","deserialize","ec_op","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","error_msg","failure_flag","fmt","fmt","fmt","from","from","from","from_execution_result","get_hash","get_hash","hash","hash","into","into","into","partial_cmp","partial_cmp","pedersen","poseidon","range_check","remaining_gas","remaining_gas","return_value","return_values","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","segment_arena","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","Aot","AotNativeExecutor","ArgumentMapper","Jit","JitNativeExecutor","NativeExecutor","__clone_box","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","find_function_ptr","find_function_ptr","fmt","fmt","fmt","from","from","from","from","from","from","from_native_module","from_native_module","into","into","into","into","invoke_contract_dynamic","invoke_contract_dynamic","invoke_contract_dynamic","invoke_data","invoke_dynamic","invoke_dynamic","invoke_dynamic","module","new","new","program_registry","push","push_aligned","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","BranchTarget","Error","Jump","LibfuncBuilder","LibfuncHelper","Return","__clone_box","ap_tracking","append_block","array","bitwise","bool","borrow","borrow","borrow_mut","borrow_mut","box","br","branch_align","build","bytes31","cast","clone","clone_into","cond_br","debug","deref","drop","dup","ec","enum","felt252","felt252_dict","felt252_dict_entry","fmt","from","from","function_call","gas","increment_builtin_counter","init_block","into","into","is_function_call","mem","nullable","pedersen","poseidon","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","sint128","sint16","sint32","sint64","sint8","snapshot_take","stark_net","struct","switch","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","uint128","uint16","uint256","uint32","uint512","uint64","uint8","unconditional_jump","unwrap_non_zero","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","build","build_disable","build_enable","build_revoke","build","build_append","build_get","build_len","build_new","build_pop_front","build_pop_front_consume","build_slice","build_snapshot_pop_back","build_snapshot_pop_front","build_span_from_tuple","build","build","build_bool_not","build_bool_to_felt252","build","build_into_box","build_unbox","build","build","build_const","build_from_felt252","build_to_felt252","build","build_downcast","build_upcast","build","build_print","build","build","build","build_is_zero","build_neg","build_point_from_x","build_state_add","build_state_add_mul","build_state_finalize","build_state_init","build_try_new","build_unwrap_point","build_zero","build","build_init","build_match","build_snapshot_match","build","build_binary_operation","build_const","build_is_zero","build","build_new","build_squash","build","build_finalize","build_get","build","build","build_builtin_withdraw_gas","build_get_available_gas","build_get_builtin_costs","build_withdraw_gas","build","build_alloc_local","build_finalize_locals","build_rename","build_store_local","build_store_temp","build","build","build_pedersen","build","build_hades_permutation","build","build_const","build_diff","build_equal","build_from_felt252","build_is_zero","build_operation","build_to_felt252","build","build_const","build_diff","build_equal","build_from_felt252","build_is_zero","build_operation","build_to_felt252","build_widemul","build","build_const","build_diff","build_equal","build_from_felt252","build_is_zero","build_operation","build_to_felt252","build_widemul","build","build_const","build_diff","build_equal","build_from_felt252","build_is_zero","build_operation","build_to_felt252","build_widemul","build","build_const","build_diff","build_equal","build_from_felt252","build_is_zero","build_operation","build_to_felt252","build_widemul","build","build","build_call_contract","build_class_hash_const","build_class_hash_to_felt252","build_class_hash_try_from_felt252","build_contract_address_const","build_contract_address_to_felt252","build_contract_address_try_from_felt252","build_deploy","build_emit_event","build_get_block_hash","build_get_execution_info","build_get_execution_info_v2","build_keccak","build_library_call","build_replace_class","build_send_message_to_l1","build_storage_address_from_base","build_storage_address_from_base_and_offset","build_storage_address_to_felt252","build_storage_address_try_from_felt252","build_storage_base_address_const","build_storage_base_address_from_felt252","build_storage_read","build_storage_write","build","build_construct","build_deconstruct","build","build_byte_reverse","build_const","build_divmod","build_equal","build_from_felt252","build_guarantee_mul","build_guarantee_verify","build_is_zero","build_operation","build_square_root","build_to_felt252","build","build_const","build_divmod","build_equal","build_from_felt252","build_is_zero","build_operation","build_square_root","build_to_felt252","build_widemul","build","build_divmod","build_is_zero","build_square_root","build_u256_guarantee_inv_mod_n","build","build_const","build_divmod","build_equal","build_from_felt252","build_is_zero","build_operation","build_square_root","build_to_felt252","build_widemul","build","build_divmod_u256","build","build_const","build_divmod","build_equal","build_from_felt252","build_is_zero","build_operation","build_square_root","build_to_felt252","build_widemul","build","build_const","build_divmod","build_equal","build_from_felt252","build_is_zero","build_operation","build_square_root","build_to_felt252","build_widemul","build","build","MetadataStorage","borrow","borrow_mut","debug_utils","default","enum_snapshot_variants","fmt","from","gas","get","get_mut","get_or_insert_with","insert","into","new","prime_modulo","realloc_bindings","remove","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","runtime_bindings","snapshot_clones","syscall_handler","tail_recursion","try_from","try_into","type_id","upcast","upcast_mut","vzip","DebugUtils","borrow","borrow_mut","breakpoint_marker","debug_breakpoint_trap","default","fmt","from","into","print_felt252","print_i1","print_i128","print_i8","print_pointer","register_impls","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","EnumSnapshotVariantsMeta","borrow","borrow_mut","default","from","get_variants","into","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","set_mapping","try_from","try_into","type_id","upcast","upcast_mut","vzip","ApChangeError","CostError","GasCost","GasMetadata","GasMetadataError","MetadataComputationConfig","NotEnoughGas","__clone_box","__clone_box","__clone_box","ap_change_info","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","compare","default","default","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","function_set_costs","gas_info","get_gas_cost_for_statement","get_hash","get_initial_available_gas","hash","initial_required_gas","into","into","into","into","linear_ap_change_solver","linear_gas_solver","new","partial_cmp","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","source","to_owned","to_owned","to_owned","to_smolstr","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","vzip","vzip","vzip","vzip","PrimeModuloMeta","borrow","borrow_mut","fmt","from","into","new","prime","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","ReallocBindingsMeta","borrow","borrow_mut","fmt","free","from","into","new","realloc","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","RuntimeBindingsMeta","borrow","borrow_mut","default","dict_alloc_free","dict_alloc_new","dict_get","dict_insert","fmt","from","into","libfunc_debug_print","libfunc_ec_point_from_x_nz","libfunc_ec_point_try_new_nz","libfunc_ec_state_add","libfunc_ec_state_add_mul","libfunc_ec_state_try_finalize_nz","libfunc_hades_permutation","libfunc_pedersen","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","CloneFn","SnapshotClonesMeta","borrow","borrow_mut","default","from","into","register","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","wrap_invoke","SyscallHandlerMeta","__clone_box","as_ptr","borrow","borrow_mut","clone","clone_into","drop","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","from","into","new","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","to_owned","try_from","try_into","type_id","upcast","upcast_mut","vzip","TailRecursionMeta","borrow","borrow_mut","depth_counter","fmt","from","into","new","recursion_target","return_target","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","set_return_target","try_from","try_into","type_id","upcast","upcast_mut","vzip","NativeModule","borrow","borrow_mut","fmt","from","get_metadata","insert_metadata","into","metadata","module","new","program_registry","remove_metadata","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_into","type_id","upcast","upcast_mut","vzip","BlockInfo","Err","ExecutionInfo","ExecutionInfoV2","Felt252Abi","Ok","ResourceBounds","Secp256k1Point","Secp256r1Point","StarkNetSyscallHandler","SyscallResult","TxInfo","TxV2Info","U256","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","account_contract_address","account_contract_address","account_deployment_data","block_info","block_info","block_number","block_timestamp","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_contract","caller_address","caller_address","chain_id","chain_id","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","compare","compare","compare","compare","compare","compare","compare","contract_address","contract_address","default","deploy","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","emit_event","entry_point_selector","entry_point_selector","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fee_data_availability_mode","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_block_hash","get_execution_info","get_execution_info_v2","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","get_hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hi","into","into","into","into","into","into","into","into","into","into","keccak","library_call","lo","max_amount","max_fee","max_fee","max_price_per_unit","nonce","nonce","nonce_data_availability_mode","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","paymaster_data","pop_log","replace_class","resource","resource_bounds","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","secp256k1_add","secp256k1_get_point_from_x","secp256k1_get_xy","secp256k1_mul","secp256k1_new","secp256r1_add","secp256r1_get_point_from_x","secp256r1_get_xy","secp256r1_mul","secp256r1_new","send_message_to_l1","sequencer_address","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_account_contract_address","set_block_number","set_block_timestamp","set_caller_address","set_chain_id","set_contract_address","set_max_fee","set_nonce","set_sequencer_address","set_signature","set_transaction_hash","set_version","signature","signature","storage_read","storage_write","tip","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction_hash","transaction_hash","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tx_info","tx_info","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","version","version","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","Error","TypeBuilder","WithSelf","__clone_box","array","as_ref","bitwise","borrow","borrow_mut","bounded_int","box","build","build_default","build_drop","builtin_costs","bytes31","clone","clone_into","deref","ec_op","ec_point","ec_state","enum","eq","equivalent","equivalent","equivalent","equivalent","equivalent","felt252","felt252_dict","felt252_dict_entry","fields","fmt","from","gas_builtin","get_hash","hash","integer_width","into","is_builtin","is_complex","is_integer_signed","is_memory_allocated","is_zst","layout","new","non_zero","nullable","pedersen","poseidon","range_check","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","segment_arena","self_ty","snapshot","squashed_felt252_dict","stark_net","struct","to_owned","try_from","try_into","type_id","uint128","uint128_mul_guarantee","uint16","uint32","uint64","uint8","uninitialized","upcast","upcast_mut","variants","vzip","build","build","build","build","build","build","build","build","build","TypeLayout","build","get_layout_for_variants","get_type_for_variants","HALF_PRIME","PRIME","borrow","borrow","borrow_mut","borrow_mut","build","deref","deref","from","from","into","into","register_prime_modulo_meta","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","vzip","vzip","build","build","build","build","build","build","build","build","build","build","build","build","build_class_hash","build_contract_address","build_secp256_point","build_storage_address","build_storage_base_address","build_system","build","build","build","build","build","build","build","build","LayoutError","ProgramRegistryExt","SHARED_LIBRARY_EXT","__clone_box","borrow","borrow_mut","build_type","build_type_with_layout","cairo_to_sierra","clone","clone_into","create_engine","debug_with","eq","equivalent","equivalent","equivalent","equivalent","equivalent","felt252_bigint","felt252_short_str","felt252_str","find_entry_point","find_entry_point_by_idx","find_function_id","fmt","fmt","from","generate_function_name","get_integer_layout","into","layout_repeat","next_multiple_of_u32","next_multiple_of_usize","padding_needed_for","register_runtime_symbols","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","run_pass_manager","to_owned","to_smolstr","to_string","try_from","try_into","type_id","upcast","upcast_mut","vzip","Array","Bytes31","EcPoint","EcState","Enum","Felt252","Felt252Dict","JitValue","Null","Secp256K1Point","Secp256R1Point","Sint128","Sint16","Sint32","Sint64","Sint8","Struct","Uint128","Uint16","Uint32","Uint64","Uint8","__clone_box","borrow","borrow_mut","clone","clone_into","deserialize","eq","equivalent","equivalent","equivalent","equivalent","equivalent","felt_str","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","into","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","serialize","to_owned","try_from","try_into","type_id","upcast","upcast_mut","vzip","debug_name","debug_name","debug_name","fields","tag","value","value","x","x","y","y"],"q":[[0,"cairo_native"],[81,"cairo_native::cache"],[108,"cairo_native::cache::aot"],[130,"cairo_native::cache::jit"],[153,"cairo_native::context"],[183,"cairo_native::debug_info"],[239,"cairo_native::error"],[247,"cairo_native::error::compile"],[309,"cairo_native::error::compile::ErrorImpl"],[313,"cairo_native::error::jit_engine"],[377,"cairo_native::error::jit_engine::ErrorImpl"],[379,"cairo_native::error::libfuncs"],[448,"cairo_native::error::types"],[514,"cairo_native::execution_result"],[633,"cairo_native::executor"],[733,"cairo_native::libfuncs"],[826,"cairo_native::libfuncs::ap_tracking"],[830,"cairo_native::libfuncs::array"],[841,"cairo_native::libfuncs::bitwise"],[842,"cairo_native::libfuncs::bool"],[845,"cairo_native::libfuncs::box"],[848,"cairo_native::libfuncs::branch_align"],[849,"cairo_native::libfuncs::bytes31"],[853,"cairo_native::libfuncs::cast"],[856,"cairo_native::libfuncs::debug"],[858,"cairo_native::libfuncs::drop"],[859,"cairo_native::libfuncs::dup"],[860,"cairo_native::libfuncs::ec"],[871,"cairo_native::libfuncs::enum"],[875,"cairo_native::libfuncs::felt252"],[879,"cairo_native::libfuncs::felt252_dict"],[882,"cairo_native::libfuncs::felt252_dict_entry"],[885,"cairo_native::libfuncs::function_call"],[886,"cairo_native::libfuncs::gas"],[891,"cairo_native::libfuncs::mem"],[897,"cairo_native::libfuncs::nullable"],[898,"cairo_native::libfuncs::pedersen"],[900,"cairo_native::libfuncs::poseidon"],[902,"cairo_native::libfuncs::sint128"],[910,"cairo_native::libfuncs::sint16"],[919,"cairo_native::libfuncs::sint32"],[928,"cairo_native::libfuncs::sint64"],[937,"cairo_native::libfuncs::sint8"],[946,"cairo_native::libfuncs::snapshot_take"],[947,"cairo_native::libfuncs::stark_net"],[972,"cairo_native::libfuncs::struct"],[975,"cairo_native::libfuncs::uint128"],[987,"cairo_native::libfuncs::uint16"],[997,"cairo_native::libfuncs::uint256"],[1002,"cairo_native::libfuncs::uint32"],[1012,"cairo_native::libfuncs::uint512"],[1014,"cairo_native::libfuncs::uint64"],[1024,"cairo_native::libfuncs::uint8"],[1034,"cairo_native::libfuncs::unconditional_jump"],[1035,"cairo_native::libfuncs::unwrap_non_zero"],[1036,"cairo_native::metadata"],[1071,"cairo_native::metadata::debug_utils"],[1099,"cairo_native::metadata::enum_snapshot_variants"],[1120,"cairo_native::metadata::gas"],[1251,"cairo_native::metadata::prime_modulo"],[1272,"cairo_native::metadata::realloc_bindings"],[1294,"cairo_native::metadata::runtime_bindings"],[1326,"cairo_native::metadata::snapshot_clones"],[1348,"cairo_native::metadata::syscall_handler"],[1380,"cairo_native::metadata::tail_recursion"],[1404,"cairo_native::module"],[1430,"cairo_native::starknet"],[1849,"cairo_native::types"],[1929,"cairo_native::types::array"],[1930,"cairo_native::types::bitwise"],[1931,"cairo_native::types::bounded_int"],[1932,"cairo_native::types::box"],[1933,"cairo_native::types::builtin_costs"],[1934,"cairo_native::types::bytes31"],[1935,"cairo_native::types::ec_op"],[1936,"cairo_native::types::ec_point"],[1937,"cairo_native::types::ec_state"],[1938,"cairo_native::types::enum"],[1942,"cairo_native::types::felt252"],[1982,"cairo_native::types::felt252_dict"],[1983,"cairo_native::types::felt252_dict_entry"],[1984,"cairo_native::types::gas_builtin"],[1985,"cairo_native::types::non_zero"],[1986,"cairo_native::types::nullable"],[1987,"cairo_native::types::pedersen"],[1988,"cairo_native::types::poseidon"],[1989,"cairo_native::types::range_check"],[1990,"cairo_native::types::segment_arena"],[1991,"cairo_native::types::snapshot"],[1992,"cairo_native::types::squashed_felt252_dict"],[1993,"cairo_native::types::stark_net"],[2000,"cairo_native::types::struct"],[2001,"cairo_native::types::uint128"],[2002,"cairo_native::types::uint128_mul_guarantee"],[2003,"cairo_native::types::uint16"],[2004,"cairo_native::types::uint32"],[2005,"cairo_native::types::uint64"],[2006,"cairo_native::types::uint8"],[2007,"cairo_native::types::uninitialized"],[2008,"cairo_native::utils"],[2061,"cairo_native::values"],[2128,"cairo_native::values::JitValue"],[2139,"dyn_clone::sealed"],[2140,"core::cmp"],[2141,"melior::context"],[2142,"melior::ir::module"],[2143,"cairo_lang_sierra::program"],[2144,"cairo_lang_sierra::extensions::core"],[2145,"cairo_lang_sierra::extensions::core"],[2146,"core::option"],[2147,"core::result"],[2148,"core::fmt"],[2149,"core::fmt"],[2150,"core::marker"],[2151,"core::hash"],[2152,"std::path"],[2153,"std::io::error"],[2154,"alloc::boxed"],[2155,"alloc::collections::vec_deque"],[2156,"std::collections::hash::map"],[2157,"smol_str"],[2158,"alloc::string"],[2159,"core::any"],[2160,"core::cmp"],[2161,"cairo_lang_compiler::db"],[2162,"cairo_lang_diagnostics::diagnostics"],[2163,"melior::error"],[2164,"cairo_lang_sierra::program_registry"],[2165,"cairo_lang_sierra::ids"],[2166,"core::ops::function"],[2167,"cairo_lang_sierra::ids"],[2168,"core::alloc::layout"],[2169,"core::num::error"],[2170,"serde::de"],[2171,"serde::ser"],[2172,"cairo_lang_sierra::ids"],[2173,"starknet_types_core::felt"],[2174,"bumpalo"],[2175,"libloading::safe"],[2176,"cairo_lang_sierra::extensions::core"],[2177,"melior::ir::value"],[2178,"melior::ir::location"],[2179,"melior::ir::operation"],[2180,"cairo_lang_sierra::extensions::modules::ap_tracking"],[2181,"cairo_lang_sierra::extensions::lib_func"],[2182,"cairo_lang_sierra::extensions::modules::array"],[2183,"cairo_lang_sierra::extensions::lib_func"],[2184,"cairo_lang_sierra::extensions::modules::boxing"],[2185,"cairo_lang_sierra::extensions::modules::bytes31"],[2186,"cairo_lang_sierra::extensions::modules::consts"],[2187,"cairo_lang_sierra::extensions::modules::casts"],[2188,"cairo_lang_sierra::extensions::modules::casts"],[2189,"cairo_lang_sierra::extensions::modules::ec"],[2190,"cairo_lang_sierra::extensions::modules::enm"],[2191,"cairo_lang_sierra::extensions::modules::enm"],[2192,"cairo_lang_sierra::extensions::modules::felt252"],[2193,"cairo_lang_sierra::extensions::modules::felt252_dict"],[2194,"cairo_lang_sierra::extensions::modules::gas"],[2195,"cairo_lang_sierra::extensions::modules::mem"],[2196,"cairo_lang_sierra::extensions::modules::nullable"],[2197,"cairo_lang_sierra::extensions::modules::pedersen"],[2198,"cairo_lang_sierra::extensions::modules::poseidon"],[2199,"cairo_lang_sierra::extensions::modules::int::signed128"],[2200,"cairo_lang_sierra::extensions::modules::int::signed128"],[2201,"cairo_lang_sierra::extensions::modules::int"],[2202,"cairo_lang_sierra::extensions::modules::int::signed"],[2203,"cairo_lang_sierra::extensions::modules::structure"],[2204,"cairo_lang_sierra::extensions::modules::int::unsigned128"],[2205,"cairo_lang_sierra::extensions::modules::int::unsigned128"],[2206,"cairo_lang_sierra::extensions::modules::int::unsigned"],[2207,"cairo_lang_sierra::extensions::modules::int::unsigned"],[2208,"cairo_lang_sierra::extensions::modules::int::unsigned"],[2209,"cairo_lang_sierra_ap_change"],[2210,"cairo_lang_sierra_gas"],[2211,"cairo_lang_sierra::program"],[2212,"melior::ir::operation"],[2213,"core::ptr::non_null"],[2214,"melior::ir::block"],[2215,"core::clone"],[2216,"core::alloc::layout"],[2217,"cairo_lang_sierra::extensions::types"],[2218,"cairo_lang_sierra::extensions::modules::enm"],[2219,"cairo_lang_sierra::extensions::modules::starknet"],[2220,"cairo_lang_sierra::extensions::modules::structure"],[2221,"cairo_lang_sierra::program"]],"d":["","","","","","","","","","","","","","","","","","","","Run the compiler on a program. The compiled program is …","","Extracts useful debugging information from cairo programs …","","","","","","","","Various error types used thorough the crate.","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Compiler libfunc infrastructure","Code generation metadata","","Make sure to call","","","","","","","","","","","","","","","","","Starknet related code for <code>cairo_native</code>","","","","","","","","","","","Compiler type infrastructure","","","","","Various utilities","JIT params and return values de/serialization","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","A Cache for programs with the same context.","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Context of IRs, dialects and passes for Cairo programs …","","","Compiles a sierra program into MLIR and then lowers to …","Compiles a sierra program into MLIR and then lowers to …","","","","","","","","","Returns the argument unchanged.","Initialize an MLIR context.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","","","","Contains the success value","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Contains the error value","","","","","","","Contains the success value","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Starknet contract execution result.","The result of the JIT execution.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Convert a [<code>ExecuteResult</code>] to a [<code>NativeExecutionResult</code>]","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A MLIR JIT execution engine in the context of Cairo Native.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Utility to convert a <code>NativeModule</code> into an <code>AotNativeExecutor</code>…","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Execute a program with the given params.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A libfunc branching target.","Error type returned by this trait’s methods.","A block within the current libfunc.","Generation of MLIR operations from their Sierra …","Helper struct which contains logic generation for extra …","A statement’s branch target by its index.","","<code>AP</code> tracking libfuncs","Inserts a new block after all the current libfunc’s …","Array libfuncs","Bitwise libfuncs","Boolean libfuncs","","","","","Box libfuncs","Creates an unconditional branching operation out of the …","Branch alignment libfunc","Generate the MLIR operations.","Bytes31-related libfuncs","Casting libfuncs","","","Creates a conditional binary branching operation, …","Debug libfuncs","","<code>AP</code> tracking libfuncs","State value duplication libfunc","Elliptic curve libfuncs","Enum-related libfuncs","<code>Felt</code>-related libfuncs","<code>Felt</code> dictionary libfuncs","<code>Felt</code> dictionary entry libfuncs","","Returns the argument unchanged.","Returns the argument unchanged.","Function call libfuncs","Gas management libfuncs","","Return the initialization block.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Return the target function if the statement is a function …","Memory-related libfuncs","Nullable libfuncs","Pedersen hashing libfuncs","Poseidon hashing libfuncs","","","","","","","","","","","","","","","<code>i128</code>-related libfuncs","<code>i16</code>-related libfuncs","<code>i32</code>-related libfuncs","<code>i64</code>-related libfuncs","<code>i8</code>-related libfuncs","Snapshot taking libfuncs","StarkNet libfuncs","Struct-related libfuncs","Creates a conditional multi-branching operation, …","","","","","","","","<code>u128</code>-related libfuncs","<code>u16</code>-related libfuncs","<code>u256</code>-related libfuncs","<code>u32</code>-related libfuncs","<code>u512</code>-related libfuncs","<code>u64</code>-related libfuncs","<code>u8</code>-related libfuncs","Unconditional jump libfunc","Non-zero unwrapping libfuncs","","","","","","","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>disable_ap_tracking</code> …","Generate MLIR operations for the <code>enable_ap_tracking</code> …","Generate MLIR operations for the <code>revoke_ap_tracking.</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>array_append</code> libfunc.","Generate MLIR operations for the <code>array_get</code> libfunc.","Generate MLIR operations for the <code>array_append</code> libfunc.","Generate MLIR operations for the <code>array_new</code> libfunc.","Generate MLIR operations for the <code>array_pop_front</code> libfunc.","Generate MLIR operations for the <code>array_pop_front_consume</code> …","Generate MLIR operations for the <code>array_slice</code> libfunc.","Generate MLIR operations for the <code>array_snapshot_pop_back</code> …","Generate MLIR operations for the <code>array_snapshot_pop_front</code> …","Generate MLIR operations for the <code>span_from_tuple</code> libfunc.","Generate MLIR operations for the <code>bitwise</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>bool_not_impl</code> libfunc.","Generate MLIR operations for the <code>unbox</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>into_box</code> libfunc.","Generate MLIR operations for the <code>unbox</code> libfunc.","Generate MLIR operations for the <code>branch_align</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>bytes31_const</code> libfunc.","Generate MLIR operations for the <code>u8_from_felt252</code> libfunc.","Generate MLIR operations for the <code>bytes31_to_felt252</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>downcast</code> libfunc.","Generate MLIR operations for the <code>upcast</code> libfunc.","","","Generate MLIR operations for the <code>drop</code> libfunc.","Generate MLIR operations for the <code>dup</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>ec_point_is_zero</code> libfunc.","Generate MLIR operations for the <code>ec_neg</code> libfunc.","Generate MLIR operations for the <code>ec_point_from_x_nz</code> …","Generate MLIR operations for the <code>ec_state_add</code> libfunc.","Generate MLIR operations for the <code>ec_state_add_mul</code> libfunc.","Generate MLIR operations for the <code>ec_state_try_finalize_nz</code> …","Generate MLIR operations for the <code>ec_state_init</code> libfunc.","Generate MLIR operations for the <code>ec_point_try_new_nz</code> …","Generate MLIR operations for the <code>ec_point_unwrap</code> libfunc.","Generate MLIR operations for the <code>ec_point_zero</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>enum_init</code> libfunc.","Generate MLIR operations for the <code>enum_match</code> libfunc.","Generate MLIR operations for the <code>enum_snapshot_match</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the following libfuncs:","Generate MLIR operations for the <code>felt252_const</code> libfunc.","Generate MLIR operations for the <code>felt252_is_zero</code> libfunc.","Select and call the correct libfunc builder function from …","","","Select and call the correct libfunc builder function from …","","","Generate MLIR operations for the <code>function_call</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>withdraw_gas_all</code> libfunc.","Generate MLIR operations for the <code>get_builtin_costs</code> libfunc.","Generate MLIR operations for the <code>get_builtin_costs</code> libfunc.","Generate MLIR operations for the <code>withdraw_gas</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>alloc_local</code> libfunc.","Generate MLIR operations for the <code>finalize_locals</code> libfunc.","Generate MLIR operations for the <code>rename</code> libfunc.","Generate MLIR operations for the <code>store_local</code> libfunc.","Generate MLIR operations for the <code>store_temp</code> libfunc.","Select and call the correct libfunc builder function from …","Select and call the correct libfunc builder function from …","","Select and call the correct libfunc builder function from …","","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>i128_const</code> libfunc.","Generate MLIR operations for the <code>i128_diff</code> libfunc.","Generate MLIR operations for the <code>i128_eq</code> libfunc.","Generate MLIR operations for the <code>i128_from_felt252</code> libfunc.","Generate MLIR operations for the <code>i128_is_zero</code> libfunc.","Generate MLIR operations for the i128 operation libfunc.","Generate MLIR operations for the <code>i128_to_felt252</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>i16_const</code> libfunc.","Generate MLIR operations for the <code>i16_diff</code> libfunc.","Generate MLIR operations for the <code>i16_eq</code> libfunc.","Generate MLIR operations for the <code>i16_from_felt252</code> libfunc.","Generate MLIR operations for the <code>i16_is_zero</code> libfunc.","Generate MLIR operations for the i16 operation libfunc.","Generate MLIR operations for the <code>i16_to_felt252</code> libfunc.","Generate MLIR operations for the <code>i16_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>i32_const</code> libfunc.","Generate MLIR operations for the <code>i32_diff</code> libfunc.","Generate MLIR operations for the <code>i32_eq</code> libfunc.","Generate MLIR operations for the <code>i32_from_felt252</code> libfunc.","Generate MLIR operations for the <code>i32_is_zero</code> libfunc.","Generate MLIR operations for the i32 operation libfunc.","Generate MLIR operations for the <code>i32_to_felt252</code> libfunc.","Generate MLIR operations for the <code>i32_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>i64_const</code> libfunc.","Generate MLIR operations for the <code>i64_diff</code> libfunc.","Generate MLIR operations for the <code>i64_eq</code> libfunc.","Generate MLIR operations for the <code>i64_from_felt252</code> libfunc.","Generate MLIR operations for the <code>i64_is_zero</code> libfunc.","Generate MLIR operations for the i64 operation libfunc.","Generate MLIR operations for the <code>i64_to_felt252</code> libfunc.","Generate MLIR operations for the <code>i64_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>i8_const</code> libfunc.","Generate MLIR operations for the <code>i8_diff</code> libfunc.","Generate MLIR operations for the <code>i8_eq</code> libfunc.","Generate MLIR operations for the <code>i8_from_felt252</code> libfunc.","Generate MLIR operations for the <code>i8_is_zero</code> libfunc.","Generate MLIR operations for the i8 operation libfunc.","Generate MLIR operations for the <code>i8_to_felt252</code> libfunc.","Generate MLIR operations for the <code>i8_widemul</code> libfunc.","Generate MLIR operations for the <code>snapshot_take</code> libfunc.","Select and call the correct libfunc builder function from …","","","","","","","","","","","","","","","","","","","","","","","","","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>struct_construct</code> libfunc.","Generate MLIR operations for the <code>struct_deconstruct</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u128_byte_reverse</code> libfunc.","Generate MLIR operations for the <code>u128_const</code> libfunc.","Generate MLIR operations for the <code>u128_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u128_equal</code> libfunc.","Generate MLIR operations for the <code>u128s_from_felt252</code> …","Generate MLIR operations for the <code>u128_guarantee_mul</code> …","Generate MLIR operations for the <code>u128_guarantee_verify</code> …","Generate MLIR operations for the <code>u128_is_zero</code> libfunc.","Generate MLIR operations for the <code>u128_add</code> and <code>u128_sub</code> …","Generate MLIR operations for the <code>u128_sqrt</code> libfunc.","Generate MLIR operations for the <code>u128_to_felt252</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u16_const</code> libfunc.","Generate MLIR operations for the <code>u16_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u16_eq</code> libfunc.","Generate MLIR operations for the <code>u16_from_felt252</code> libfunc.","Generate MLIR operations for the <code>u16_is_zero</code> libfunc.","Generate MLIR operations for the u16 operation libfunc.","Generate MLIR operations for the <code>u16_sqrt</code> libfunc.","Generate MLIR operations for the <code>u16_to_felt252</code> libfunc.","Generate MLIR operations for the <code>u16_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u256_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u256_is_zero</code> libfunc.","Generate MLIR operations for the <code>u256_sqrt</code> libfunc.","Generate MLIR operations for the <code>u256_guarantee_inv_mod_n</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u32_const</code> libfunc.","Generate MLIR operations for the <code>u32_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u32_eq</code> libfunc.","Generate MLIR operations for the <code>u32_from_felt252</code> libfunc.","Generate MLIR operations for the <code>u32_is_zero</code> libfunc.","Generate MLIR operations for the u32 operation libfunc.","Generate MLIR operations for the <code>u32_sqrt</code> libfunc.","Generate MLIR operations for the <code>u32_to_felt252</code> libfunc.","Generate MLIR operations for the <code>u32_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u512_safe_divmod_by_u256</code> …","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u64_const</code> libfunc.","Generate MLIR operations for the <code>u64_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u64_eq</code> libfunc.","Generate MLIR operations for the <code>u64_from_felt252</code> libfunc.","Generate MLIR operations for the <code>u64_is_zero</code> libfunc.","Generate MLIR operations for the u64 operation libfunc.","Generate MLIR operations for the <code>u64_sqrt</code> libfunc.","Generate MLIR operations for the <code>u64_to_felt252</code> libfunc.","Generate MLIR operations for the <code>u64_widemul</code> libfunc.","Select and call the correct libfunc builder function from …","Generate MLIR operations for the <code>u8_const</code> libfunc.","Generate MLIR operations for the <code>u8_safe_divmod</code> libfunc.","Generate MLIR operations for the <code>u8_eq</code> libfunc.","Generate MLIR operations for the <code>u8_from_felt252</code> libfunc.","Generate MLIR operations for the <code>u8_is_zero</code> libfunc.","Generate MLIR operations for the u8 operation libfunc.","Generate MLIR operations for the <code>u8_sqrt</code> libfunc.","Generate MLIR operations for the <code>u8_to_felt252</code> libfunc.","Generate MLIR operations for the <code>u8_widemul</code> libfunc.","Generate MLIR operations for the <code>jump</code> libfunc.","Generate MLIR operations for the <code>unwrap_non_zero</code> libfunc.","Metadata container.","","","Debug utilities","","","","Returns the argument unchanged.","","Retrieve a reference to some metadata.","Retrieve a mutable reference to some metadata.","","Insert some metadata and return a mutable reference.","Calls <code>U::from(self)</code>.","Create an empty metadata container.","Finite field prime modulo","Memory allocation external bindings","Remove some metadata and return its last value.","","","","","","","","Runtime library bindings","","","Tail recursion information","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Holds global gas info.","Error for metadata calculations.","Configuration for metadata computation.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Returns the initial value for the gas counter. If …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Prime modulo number metadata.","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create the metadata from the prime number.","Return the stored prime number.","","","","","","","","","","","","","","Memory allocation <code>realloc</code> metadata.","","","","Calls the <code>free</code> function.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Register the bindings to the <code>realloc</code> C function and return …","Calls the <code>realloc</code> function, returns a op with 1 result: an …","","","","","","","","","","","","","","Runtime library bindings metadata.","","","","Register if necessary, then invoke the <code>dict_alloc_new()</code> …","Register if necessary, then invoke the <code>dict_alloc_new()</code> …","Register if necessary, then invoke the <code>dict_get()</code> function.","Register if necessary, then invoke the <code>dict_insert()</code> …","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Register if necessary, then invoke the <code>debug::print()</code> …","Register if necessary, then invoke the <code>ec_point_from_x_nz()</code>…","Register if necessary, then invoke the …","Register if necessary, then invoke the <code>ec_state_add()</code> …","Register if necessary, then invoke the <code>ec_state_add_mul()</code> …","","Register if necessary, then invoke the <code>poseidon()</code> function.","Register if necessary, then invoke the <code>pedersen()</code> function.","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","The tail recursion metadata.","","","Return the current depth counter value.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create the tail recursion meta.","Return the recursion target block.","Return the return target block, if set.","","","","","","","","Set the return target block.","","","","","","","A MLIR module in the context of Cairo Native. It is …","","","","Returns the argument unchanged.","Retrieve a reference to some stored metadata.","Insert some metadata for the program execution and return …","Calls <code>U::from(self)</code>.","","","","","Removes metadata","","","","","","","","","","","","","","","Contains the error value","","","Binary representation of a <code>Felt</code> (in MLIR).","Contains the success value","","","","","","","","Binary representation of a <code>u256</code> (in MLIR).","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</coderror type returned by this trait’s methods.","Generation of MLIR types from their Sierra counterparts.","","","Array type","","Bitwise type","","","<code>BoundedInt</code> type","Box type","Build the MLIR type.","","","Builtin costs type","<code>bytes31</code> type","","","","Elliptic curve operation type","Elliptic curve point type","Elliptic curve state type","Enum type","","","","","","","<code>felt252</code> type","<code>Felt</code> dictionary type","<code>Felt</code> dictionary entry type","","","Returns the argument unchanged.","Gas builtin type","","","If the type is an integer type, return its width in bits.","Calls <code>U::from(self)</code>.","Return whether the type is a builtin.","Return whether the type requires a return pointer when …","If the type is an integer type, return if its signed.","Whether the layout should be allocated in memory (either …","Return whether the Sierra type resolves to a zero-sized …","Generate the layout of the MLIR type.","","Non-zero type","Nullable type","Pedersen type","Poseidon type","Builtin costs type","","","","","","","","Segment arena type","","Snapshot type","Squashed <code>Felt</code> dictionary type","StarkNet types","Struct type","","","","","Unsigned 128-bit integer type","Unsigned 128-bit multiplication guarantee type","Unsigned 16-bit integer type","Unsigned 32-bit integer type","Unsigned 64-bit integer type","Unsigned 8-bit integer type","Uninitialized type","","","If the type is a enum type, return all possible variants.","","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","An MLIR type with its memory layout.","Build the MLIR type.","Extract layout for the default enum representation, its …","Extract the type and layout for the default enum …","","The <code>felt252</code> prime modulo.","","","","","Build the MLIR type.","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","","","","","","","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","Build the MLIR type.","","","","","","","","","Compile a cairo program found at the given path to sierra.","","","Creates the execution engine, with all symbols registered.","Return a type that calls a closure when formatted using …","","","","","","","Parse any type that can be a bigint to a felt that can be …","Parse a short string into a felt that can be used in the …","Parse a numeric string into felt, wrapping negatives …","Returns the given entry point if present.","Returns the given entry point if present.","Given a string representing a function name, searches in …","","","Returns the argument unchanged.","Generate a function name.","Return the layout for an integer of arbitrary width.","Calls <code>U::from(self)</code>.","Copied from std.","","","Edit: Copied from the std lib.","","","","","","","","","","","","","","","","","","","all elements need to be same type","","","","","","","A JitValue is a value that can be passed to the JIT engine …","Used as return value for Nullables that are null.","","","","","","","","","","","","","","","","","","","","","","","","","","String to felt","","","","","","","","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[4,4,0,4,4,0,3,4,3,4,3,4,0,3,4,3,4,4,4,0,0,0,4,4,4,4,4,4,4,0,0,0,3,3,4,3,4,4,4,3,4,0,0,0,0,0,4,3,3,3,3,3,3,3,4,4,4,4,4,4,4,0,3,4,3,3,3,4,3,4,3,4,0,3,4,3,4,0,0,3,4,36,0,36,0,0,0,36,36,36,36,36,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,44,44,44,44,44,44,44,44,44,44,44,44,44,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,49,49,49,49,49,49,13,13,13,13,13,13,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,49,13,0,0,0,0,0,0,0,0,0,52,0,0,52,52,52,52,52,15,52,15,52,15,15,15,52,52,15,15,52,52,52,52,52,15,52,0,0,15,15,15,15,15,15,15,52,52,52,52,52,52,52,15,52,15,15,52,15,52,15,52,15,52,15,52,15,52,15,52,15,52,213,214,214,213,0,0,65,65,65,65,65,65,0,65,65,64,65,64,65,64,64,64,65,65,64,64,65,65,65,65,64,65,0,0,0,64,64,64,64,64,64,64,65,65,65,65,65,65,65,64,65,64,64,65,64,65,64,65,64,65,64,65,64,65,64,65,64,65,215,215,67,99,0,0,67,67,67,67,99,67,67,67,0,67,67,58,67,58,67,58,58,58,67,67,58,58,67,67,67,67,67,67,67,67,58,67,58,58,58,58,58,58,58,67,67,67,67,67,67,67,58,67,58,58,67,58,67,58,67,58,67,58,67,58,67,58,67,58,67,192,0,0,70,70,70,70,192,70,70,0,70,62,70,62,70,62,62,62,70,70,62,62,70,70,70,70,70,70,70,70,62,70,62,62,62,62,62,62,62,70,70,70,70,70,70,70,62,70,62,62,70,62,70,62,70,62,70,62,70,62,70,62,70,62,70,0,0,0,71,72,73,71,71,72,73,71,72,73,72,71,72,73,71,72,73,71,73,71,73,71,73,71,72,73,71,71,72,73,71,71,71,71,71,72,72,72,72,72,73,73,73,73,73,73,73,71,72,73,71,72,73,73,71,73,71,73,71,72,73,71,73,71,71,71,72,73,72,73,71,71,71,71,71,71,71,72,72,72,72,72,72,72,73,73,73,73,73,73,73,71,71,72,73,71,72,73,71,72,73,71,72,73,71,72,73,71,72,73,71,72,73,71,72,73,76,0,0,76,0,0,76,45,83,42,76,45,83,42,76,76,76,45,42,45,42,76,45,83,42,76,76,76,45,42,45,83,42,76,45,42,76,83,45,42,76,45,83,42,45,83,83,45,45,45,45,45,45,45,83,83,83,83,83,83,83,42,42,42,42,42,42,42,76,76,76,76,76,76,76,76,45,83,42,76,45,83,42,76,45,83,42,76,45,83,42,76,45,83,42,76,45,83,42,76,0,96,97,0,0,97,97,0,90,0,0,0,90,97,90,97,0,90,0,96,0,0,97,97,90,0,90,0,0,0,0,0,0,0,97,90,97,0,0,0,90,90,97,96,0,0,0,0,90,90,90,90,90,90,90,97,97,97,97,97,97,97,0,0,0,0,0,0,0,0,90,97,90,97,90,97,90,97,0,0,0,0,0,0,0,0,0,90,97,90,97,90,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,12,0,12,0,12,12,0,12,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,0,0,0,0,12,12,12,12,12,12,0,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,0,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,56,56,0,0,0,0,56,87,156,48,87,87,156,48,56,87,156,48,56,87,156,48,87,156,48,156,156,87,48,87,156,56,87,87,87,87,87,156,156,156,156,156,56,56,56,56,56,87,156,48,56,56,87,156,48,56,56,56,48,87,87,156,87,156,87,87,156,48,56,48,48,87,156,87,87,87,87,87,87,87,156,156,156,156,156,156,156,48,48,48,48,48,48,48,56,56,56,56,56,56,56,56,87,156,48,56,56,87,156,48,56,87,156,48,56,87,156,48,56,87,156,48,56,87,156,48,56,87,156,48,56,0,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,0,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,163,0,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,0,0,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,166,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,172,0,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,0,174,0,0,0,174,0,0,0,0,0,0,0,0,175,176,177,178,179,180,181,182,183,184,179,182,179,177,178,181,181,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,171,177,178,179,182,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,176,177,178,179,180,181,182,176,177,178,179,180,181,182,177,178,176,171,176,177,178,179,180,181,182,171,177,178,176,177,178,179,180,181,182,183,184,176,176,176,176,176,177,177,177,177,177,178,178,178,178,178,179,179,179,179,179,180,180,180,180,180,181,181,181,181,181,182,182,182,182,182,183,183,183,183,183,184,184,184,184,184,179,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,171,171,171,176,177,178,179,180,181,182,183,184,176,177,178,179,180,181,182,183,184,176,175,176,177,178,179,180,181,182,183,184,171,171,176,180,179,182,180,179,182,179,176,177,178,179,180,181,182,179,171,171,180,179,175,175,175,175,175,175,175,176,176,176,176,176,176,176,177,177,177,177,177,177,177,178,178,178,178,178,178,178,179,179,179,179,179,179,179,180,180,180,180,180,180,180,181,181,181,181,181,181,181,182,182,182,182,182,182,182,183,183,183,183,183,183,183,184,184,184,184,184,184,184,171,171,171,171,171,171,171,171,171,171,171,181,176,177,178,179,180,181,182,171,171,171,171,171,171,171,171,171,171,171,171,179,182,171,171,179,175,176,177,178,179,180,181,182,183,184,179,182,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,177,178,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,175,176,177,178,179,180,181,182,183,184,179,182,175,176,177,178,179,180,181,182,183,184,183,184,183,184,187,0,0,186,0,186,0,186,186,0,0,187,187,187,0,0,186,186,186,0,0,0,0,186,186,186,186,186,186,0,0,0,187,186,186,0,186,186,187,186,187,187,187,187,187,187,186,0,0,0,0,0,186,186,186,186,186,186,186,0,186,0,0,0,0,186,186,186,186,0,0,0,0,0,0,0,186,186,187,186,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,198,197,198,0,197,198,197,198,197,198,0,197,197,197,197,197,197,197,198,198,198,198,198,198,198,197,198,197,198,197,198,197,198,197,198,197,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,68,68,203,203,0,68,68,0,0,68,68,68,68,68,68,0,0,0,0,0,0,68,68,68,0,0,68,0,0,0,0,0,68,68,68,68,68,68,68,0,68,68,68,68,68,68,68,68,68,84,84,84,84,84,84,84,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,216,217,218,216,217,217,218,219,220,219,220],"f":[0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[3,3],[4,4],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[4,4],5],[[-1,-2],5,[],[]],[[6,7,8,[11,[9,10]],12,[14,[13]]],[[16,[2,15]]]],0,0,[[],4],[[4,4],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,0,0,[[3,18],19],[[3,18],19],[[4,18],19],[-1,-1,[]],[-1,-1,[]],[[-1,-2],20,[21,22],23],[[4,-1],2,24],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[7,4],[[16,[[26,[25]],3]]]],[[[27,[25]],28],[[16,[2,29]]]],[[4,4],[[14,[5]]]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[36,[-1]],18],19,[37,38,21,39]],[[[40,[-1]]],[[36,[-1]]],[37,38,21]],[-1,-1,[]],[[[41,[-1]]],[[36,[-1]]],[37,38,21]],[-1,-2,[],[]],0,[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[40,[-1]],-1,8,4],[[43,[42]]],[37,38,21]],[[[40,[-1]],18],19,[37,38,21]],[-1,-1,[]],[[[40,[-1]],-1],[[14,[[43,[42]]]]],[37,38,21]],[-1,-2,[],[]],[44,[[40,[-1]]],[37,38,21]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[41,[-1]],-1,8,4],[[43,[45]]],[38,21,37]],[[[41,[-1]]],44,[38,21,37]],[[[41,[-1]],18],19,[38,21,37]],[-1,-1,[]],[[[41,[-1]],-1],[[14,[[43,[45]]]]],[38,21,37]],[-1,-2,[],[]],[44,[[41,[-1]]],[38,21,37]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[44,8],[[16,[46,47]]]],[[44,8,48],[[16,[46,47]]]],[[],44],[[44,44],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[44,18],19],[-1,-1,[]],[[],6],[-1,-2,[],[]],[[],44],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,1],2,[]],[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[49,49],[13,13],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[50,8],[[16,[49,51]]]],[[6,50,49],13],[[49,18],19],[[13,18],19],[-1,-1,[]],[-1,-1,[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[15,-1,[]],[[15,18],19],[[15,18],19],[[52,18],19],[[52,18],19],[-1,-1,[]],[-1,15,[]],[53,52],[[[30,[54]]],52],[55,52],[56,52],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,[[0,[[60,[58],[[59,[15]]]]]]]],[61,[[0,[[60,[62],[[59,[15]]]]]]]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[15,[[14,[63]]]],[52,[[14,[63]]]],0,[-1,33,[]],[-1,33,[]],[-1,34,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[64,-1,[]],[[64,18],19],[[64,18],19],[[65,18],19],[[65,18],19],[-1,64,[]],[-1,-1,[]],[-1,-1,[]],[66,65],[[[30,[54]]],65],[53,65],[-1,-2,[],[]],[-1,-2,[],[]],[61,64],[61,[[0,[[60,[62],[[59,[64]]]]]]]],[34,64],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[64,[[14,[63]]]],[65,[[14,[63]]]],0,[-1,33,[]],[-1,33,[]],[-1,34,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,-1,[]],[[58,18],19],[[58,18],19],[[67,18],19],[[67,18],19],[-1,58,[]],[-1,-1,[]],[68,67],[62,67],[54,67],[53,67],[[[30,[54]]],67],[-1,-1,[]],[66,67],[69,67],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[58,[[14,[63]]]],[67,[[14,[63]]]],0,[-1,33,[]],[-1,33,[]],[-1,34,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[62,-1,[]],[[62,18],19],[[62,18],19],[[70,18],19],[[70,18],19],[-1,62,[]],[-1,-1,[]],[[[30,[54]]],70],[53,70],[66,70],[54,70],[58,70],[68,70],[-1,-1,[]],[69,70],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[62,[[14,[63]]]],[70,[[14,[63]]]],0,[-1,33,[]],[-1,33,[]],[-1,34,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[71,71],[72,72],[73,73],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[71,71],5],[[73,73],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[],71],[[],73],[-1,[[16,[71]]],74],[-1,[[16,[72]]],74],[-1,[[16,[73]]],74],0,[[71,71],17],[[72,72],17],[[73,73],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,0,[[71,18],19],[[72,18],19],[[73,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[72,[[16,[73,64]]]],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[71,-1],2,24],[[73,-1],2,24],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[71,71],[[14,[5]]]],[[73,73],[[14,[5]]]],0,0,0,0,0,0,0,[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],0,[[71,-1],16,75],[[72,-1],16,75],[[73,-1],16,75],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,76],[[-1,-2],2,[],[]],[[45,77],78],[[42,77],78],[[45,18],19],[[42,18],19],[[76,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[45,76],[42,76],[[46,4],45],[[46,4],42],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[45,77,[27,[79]],[14,[80]],[14,[81]]],[[16,[73,82]]]],[[42,77,[27,[79]],[14,[80]],[14,[81]]],[[16,[73,82]]]],[[76,77,[27,[79]],[14,[80]],[14,[81]]],[[16,[73,82]]]],[83,[[27,[20]]]],[[45,77,[27,[84]],[14,[80]],[14,[81]]],[[16,[72,82]]]],[[42,77,[27,[84]],[14,[80]],[14,[81]]],[[16,[72,82]]]],[[76,77,[27,[84]],[14,[80]],[14,[81]]],[[16,[72,82]]]],[45,7],[[85,[11,[9,10]]],83],[[86,[11,[9,10]],87],42],[45,[[11,[9,10]]]],[[83,61,88,84],[[16,[2,[30,[54]]]]]],[[83,89,[27,[20]]],2],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[[-1,1],2,[]],0,[[90,91],91],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[90,89,[27,[92]],93],94],0,[[[96,[],[[95,[-1]]]],6,[11,[9,10]],91,93,90,12],[[16,[2,-1]]],63],0,0,[97,97],[[-1,-2],2,[],[]],[[90,6,92,[98,[89]],[98,[[27,[92]]]],93],94],0,[90,-1,[]],0,0,0,0,0,0,0,[[97,18],19],[-1,-1,[]],[-1,-1,[]],0,0,[[6,91,93,92],[[99,[92]]]],[90,91],[-1,-2,[],[]],[-1,-2,[],[]],[[[96,[],[[95,[-1]]]]],[[14,[77]]],63],0,0,0,0,[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],0,0,0,0,0,0,0,0,[[90,6,92,[2,[97,[27,[92]]]],[27,[[2,[100,97,[27,[92]]]]]],93],[[16,[94,58]]]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,[11,[9,10]],91,93,90,12,101],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,103],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,105],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,106],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,107],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,108],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,109],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,110],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,111],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,112],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,113],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,114],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,115],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,116],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,117],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,118],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,119],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,120],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,121],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,122],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,104],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,123],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,124],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,125],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,126],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[127]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,130],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[131]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,132],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[133]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,134],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[135]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,136],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[137]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,138],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,108],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,108],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,108],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,139],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,140],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[141]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,142],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[143]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,144],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,145],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[146]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,147],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,148],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[149]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,150],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,[128,[151]]],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,129],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],[[6,[11,[9,10]],91,93,90,12,102],[[99,[2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,[[],12],0,[[12,18],19],[-1,-1,[]],0,[12,[[14,[-1]]],152],[12,[[14,[-1]]],152],[[12,-2],-1,152,[[60,[],[[59,[-1]]]]]],[[12,-1],[[14,[-1]]],152],[-1,-2,[],[]],[[],12],0,0,[12,[[14,[-1]]],152],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],0,0,0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[153,6,7,91,93],[[99,[2]]]],[[153,91,93],[[99,[2]]]],[[],153],[[153,18],19],[-1,-1,[]],[-1,-2,[],[]],[[153,6,7,91,92,93],[[99,[2]]]],[[153,6,7,91,92,93],[[99,[2]]]],[[153,6,7,91,92,93],[[99,[2]]]],[[153,6,7,91,92,93],[[99,[2]]]],[[153,6,7,91,92,93],[[99,[2]]]],[[153,154],2],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],155],[-1,-1,[]],[[155,61],[[14,[[26,[61]]]]]],[-1,-2,[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[155,61,[14,[[27,[61]]]]],2],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[87,87],[156,156],[48,48],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[156,156],5],[[-1,-2],5,[],[]],[[],87],[[],48],[[87,87],17],[[156,156],17],[[56,56],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[87,18],19],[[156,18],19],[[48,18],19],[[56,18],19],[[56,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[157,56],[-1,-1,[]],[158,56],0,0,[[87,159,160],[[14,[80]]]],[[-1,-2],20,[21,22],23],[[87,77,[14,[80]]],[[16,[80,56]]]],[[156,-1],2,24],[[87,77],[[14,[80]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[8,[14,[48]]],[[16,[87,56]]]],[[156,156],[[14,[5]]]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[56,[[14,[63]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,33,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[[161,[-1]],18],19,39],[-1,-1,[]],[-1,-2,[],[]],[162,[[161,[-1]]],[]],[[[161,[-1]]],162,[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[163,18],19],[[6,92,93],94],[-1,-1,[]],[-1,-2,[],[]],[[6,7],163],[[6,92,92,93],94],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[],164],[[164,6,7,92,91,93],[[99,[165]]]],[[164,6,7,91,93],[[99,[165]]]],[[164,6,7,91,92,92,93],[[99,[165]]]],[[164,6,7,91,92,92,92,93],[[99,[165]]]],[[164,18],19],[-1,-1,[]],[-1,-2,[],[]],[[164,6,7,91,92,92,92,93],[[99,[92]]]],[[164,6,7,91,92,93],[[99,[165]]]],[[164,6,7,91,92,93],[[99,[165]]]],[[164,6,7,91,92,92,93],[[99,[165]]]],[[164,6,7,91,92,92,92,93],[[99,[165]]]],[[164,6,7,91,92,92,93],[[99,[165]]]],[[164,6,7,91,92,92,92,93],[[99,[165]]]],[[164,6,7,91,92,92,92,93],[[99,[165]]]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[],166],[-1,-1,[]],[-1,-2,[],[]],[[166,61,[167,[-1]],-1],2,[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[166,61],[[14,[[169,[168]]]]]],0,[[-1,1],2,[]],[81,[[170,[2]]]],[-1,-2,[],[]],[-1,-2,[],[]],[81,81],[[-1,-2],2,[],[]],[81,2],[[81,81],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[81,18],19],[-1,-1,[]],[-1,-2,[],[]],[-1,81,171],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[172,92],[[172,18],19],[-1,-1,[]],[-1,-2,[],[]],[[92,91],172],[172,173],[172,[[14,[173]]]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[172,91],2],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[46,18],19],[-1,-1,[]],[46,[[14,[-1]]],152],[[46,-1],[[14,[-1]]],152],[-1,-2,[],[]],[46,12],[46,7],[[7,[11,[9,10]],12],46],[46,[[11,[9,10]]]],[46,[[14,[-1]]],152],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],[[-1,1],2,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[171,79,79,[27,[79]],80],[[174,[[26,[79]]]]]],0,0,0,0,[175,175],[176,176],[177,177],[178,178],[179,179],[180,180],[181,181],[182,182],[183,183],[184,184],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[176,176],5],[[177,177],5],[[178,178],5],[[179,179],5],[[180,180],5],[[181,181],5],[[182,182],5],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[],176],[[171,79,79,[27,[79]],17,80],[[174,[[2,[79,[26,[79]]]]]]]],[-1,[[16,[176]]],74],[-1,[[16,[177]]],74],[-1,[[16,[178]]],74],[-1,[[16,[179]]],74],[-1,[[16,[180]]],74],[-1,[[16,[181]]],74],[-1,[[16,[182]]],74],[[171,[27,[79]],[27,[79]],80],[[174,[2]]]],0,0,[[176,176],17],[[177,177],17],[[178,178],17],[[179,179],17],[[180,180],17],[[181,181],17],[[182,182],17],[[183,183],17],[[184,184],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,[[175,18],19],[[176,18],19],[[177,18],19],[[178,18],19],[[179,18],19],[[180,18],19],[[181,18],19],[[182,18],19],[[183,18],19],[[184,18],19],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[171,20,80],[[174,[79]]]],[[171,80],[[174,[177]]]],[[171,80],[[174,[178]]]],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[-1,-2],20,[21,22],23],[[176,-1],2,24],[[177,-1],2,24],[[178,-1],2,24],[[179,-1],2,24],[[180,-1],2,24],[[181,-1],2,24],[[182,-1],2,24],[[183,-1],2,24],[[184,-1],2,24],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[171,[27,[20]],80],[[174,[176]]]],[[171,79,79,[27,[79]],80],[[174,[[26,[79]]]]]],0,0,0,0,0,0,0,0,[[176,176],[[14,[5]]]],[[177,177],[[14,[5]]]],[[178,178],[[14,[5]]]],[[179,179],[[14,[5]]]],[[180,180],[[14,[5]]]],[[181,181],[[14,[5]]]],[[182,182],[[14,[5]]]],0,[171,2],[[171,79,80],[[174,[2]]]],0,0,[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[171,183,183,80],[[174,[183]]]],[[171,176,17,80],[[174,[[14,[183]]]]]],[[171,183,80],[[174,[[2,[176,176]]]]]],[[171,183,176,80],[[174,[183]]]],[[171,176,176,80],[[174,[[14,[183]]]]]],[[171,184,184,80],[[174,[184]]]],[[171,176,17,80],[[174,[[14,[184]]]]]],[[171,184,80],[[174,[[2,[176,176]]]]]],[[171,184,176,80],[[174,[184]]]],[[171,176,176,80],[[174,[[14,[184]]]]]],[[171,79,[27,[79]],80],[[174,[2]]]],0,[[176,-1],16,75],[[177,-1],16,75],[[178,-1],16,75],[[179,-1],16,75],[[180,-1],16,75],[[181,-1],16,75],[[182,-1],16,75],[[171,79],2],[[171,20],2],[[171,20],2],[[171,79],2],[[171,79],2],[[171,79],2],[[171,80],2],[[171,79],2],[[171,79],2],[[171,[27,[79]]],2],[[171,79],2],[[171,79],2],0,0,[[171,185,79,80],[[174,[79]]]],[[171,185,79,79,80],[[174,[2]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],0,0,[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[[-1,1],2,[]],0,[[[186,[-1]]],-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,[[[187,[],[[95,[-1]]]],6,7,[11,[9,10]],12,61],[[16,[188,-1]]],63],[[[187,[],[[95,[-1]]]],6,[11,[9,10]],91,93,90,12,61],[[16,[92,-1]]],63],[[[187,[],[[95,[-1]]]],6,[11,[9,10]],91,93,90,12,61],[[16,[2,-1]]],63],0,0,[[[186,[-1]]],[[186,[-1]]],189],[[-1,-2],2,[],[]],[[[186,[-1]]],-1,[]],0,0,0,0,[[[186,[-1]],[186,[-1]]],17,37],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],0,0,0,[[[187,[],[[95,[-1]]]]],[[14,[[27,[61]]]]],63],[[[186,[-1]],18],19,39],[-1,-1,[]],0,[[-1,-2],20,[21,22],23],[[[186,[-1]],-2],2,21,24],[[[187,[],[[95,[-1]]]]],[[14,[89]]],63],[-1,-2,[],[]],[[[187,[],[[95,[-1]]]]],17,63],[[[187,[],[[95,[-1]]]],[11,[9,10]]],17,63],[[[187,[],[[95,[-1]]]]],[[14,[17]]],63],[[[187,[],[[95,[-1]]]],[11,[9,10]]],17,63],[[[187,[],[[95,[-1]]]],[11,[9,10]]],17,63],[[[187,[],[[95,[-1]]]],[11,[9,10]]],[[16,[190,-1]]],63],[[61,-1],[[186,[-1]]],[]],0,0,0,0,0,[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],0,[[[186,[-1]]],61,[]],0,0,0,0,[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[187,[],[[95,[-1]]]]],[[14,[[27,[61]]]]],63],[-1,-2,[],[]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[194]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,193],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],0,[[6,7,[11,[9,10]],12,[186,[195]]],[[192,[188]]]],[[[11,[9,10]],[27,[61]]],[[192,[[2,[190,190,[26,[190]]]]]]]],[[6,7,[11,[9,10]],12,[27,[61]]],[[192,[[2,[190,196,[26,[196]]]]]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[197,162],[198,199],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[12,[[161,[79]]]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[200]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[201]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[202]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[193]]],[[192,[188]]]],[[6,7,[11,[9,10]],12,[186,[191]]],[[192,[188]]]],0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[[203,6,7,[11,[9,10]],12,61],[[16,[188,62]]]],[[203,6,7,[11,[9,10]],12,61],[[16,[[2,[188,190]],62]]]],[28,[[169,[8]]]],[68,68],[[-1,-2],2,[],[]],[[7,12,4],154],[-1,[[0,[39]]],[[168,[18],[[59,[19]]]]]],[[68,68],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[-1,[[98,[185]]],[[204,[199]]]],[205,[[98,[185]]]],[205,[[98,[185]]]],[[8,205],[[14,[[206,[159]]]]]],[[8,89],[[14,[[206,[159]]]]]],[[8,205],77],[[68,18],19],[[68,18],19],[-1,-1,[]],[77,[[207,[205]]]],[185,190],[-1,-2,[],[]],[[190,89],[[16,[[2,[190,89]],68]]]],[[185,185],185],[[89,89],89],[[190,89],89],[154,2],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[6,7],[[16,[2,53]]]],[-1,-2,[],[]],[-1,33,[]],[-1,34,[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],[-1,-2,[],[]],[-1,-2,[],[]],[84,84],[[-1,-2],2,[],[]],[-1,[[16,[84]]],74],[[84,84],17],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[[-1,-2],17,[],[]],[205,84],[[84,18],19],[208,84],[20,84],[209,84],[79,84],[[[27,[-1]]],84,[[204,[84]],189]],[210,84],[-1,-1,[]],[185,84],[25,84],[211,84],[[[26,[-1]]],84,[[204,[84]]]],[212,84],[100,84],[[[98,[-1]]],84,[[204,[84]]]],[80,84],[-1,-2,[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[16,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2]]],[[16,[[31,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[32,[-2,-3]]],[[16,[[32,[-2,-3]],-4]]],[],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[14,[-2]]],[[16,[[14,[-2]],-3]]],[],[],[]],[[84,-1],16,75],[-1,-2,[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,35,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0],"c":[],"p":[[5,"Private",2139],[1,"tuple"],[5,"LLVMCompileError",0],[6,"OptLevel",0],[6,"Ordering",2140],[5,"Context",2141],[5,"Module",2142],[5,"Program",2143],[6,"CoreType",2144],[6,"CoreLibfunc",2144],[5,"ProgramRegistry",2145],[5,"MetadataStorage",1036],[5,"DebugLocations",183],[6,"Option",2146],[5,"Error",247],[6,"Result",2147],[1,"bool"],[5,"Formatter",2148],[8,"Result",2148],[1,"u64"],[10,"Hash",2149],[10,"Sized",2150],[10,"BuildHasher",2149],[10,"Hasher",2149],[1,"u8"],[5,"Vec",2151],[1,"slice"],[5,"Path",2152],[5,"Error",2153],[5,"Box",2154],[5,"VecDeque",2155],[5,"HashMap",2156],[5,"SmolStr",2157],[5,"String",2158],[5,"TypeId",2159],[6,"ProgramCache",81],[10,"PartialEq",2140],[10,"Eq",2140],[10,"Debug",2148],[5,"AotProgramCache",108],[5,"JitProgramCache",130],[5,"AotNativeExecutor",633],[5,"Rc",2160],[5,"NativeContext",153],[5,"JitNativeExecutor",633],[5,"NativeModule",1404],[8,"CompileError",247],[5,"MetadataComputationConfig",1120],[5,"DebugInfo",183],[5,"RootDatabase",2161],[5,"DiagnosticAdded",2162],[6,"ErrorImpl",247],[6,"Error",2163],[6,"ProgramRegistryError",2145],[6,"EditStateError",2164],[6,"GasMetadataError",1120],[5,"ConcreteLibfuncId",2165],[5,"Error",379],[17,"Output"],[10,"FnOnce",2166],[5,"ConcreteTypeId",2165],[5,"Error",448],[10,"Error",2167],[5,"Error",313],[6,"ErrorImpl",313],[5,"LayoutError",2168],[6,"ErrorImpl",379],[5,"LayoutError",2008],[5,"TryFromIntError",2169],[6,"ErrorImpl",448],[5,"BuiltinStats",514],[5,"ExecutionResult",514],[5,"ContractExecutionResult",514],[10,"Deserializer",2170],[10,"Serializer",2171],[6,"NativeExecutor",633],[5,"FunctionId",2165],[6,"c_void",2172],[5,"Felt",2173],[1,"u128"],[5,"SyscallHandlerMeta",1348],[8,"RunnerError",313],[5,"ArgumentMapper",633],[6,"JitValue",2061],[5,"Bump",2174],[5,"Library",2175],[5,"GasMetadata",1120],[6,"CoreTypeConcrete",2144],[1,"usize"],[5,"LibfuncHelper",733],[5,"Block",2176],[5,"Value",2177],[5,"Location",2178],[5,"Operation",2179],[17,"Error"],[10,"LibfuncBuilder",733],[6,"BranchTarget",733],[1,"array"],[8,"Result",379],[1,"i64"],[6,"ApTrackingConcreteLibfunc",2180],[5,"SignatureOnlyConcreteLibfunc",2181],[6,"ArrayConcreteLibfunc",2182],[5,"SignatureAndTypeConcreteLibfunc",2181],[6,"BoolConcreteLibfunc",2183],[6,"BoxConcreteLibfunc",2184],[6,"Bytes31ConcreteLibfunc",2185],[5,"SignatureAndConstConcreteLibfunc",2186],[6,"CastConcreteLibfunc",2187],[5,"DowncastConcreteLibfunc",2187],[6,"DebugConcreteLibfunc",2188],[6,"EcConcreteLibfunc",2189],[6,"EnumConcreteLibfunc",2190],[5,"EnumInitConcreteLibfunc",2190],[6,"Felt252Concrete",2191],[6,"Felt252BinaryOperationConcrete",2191],[5,"Felt252ConstConcreteLibfunc",2191],[6,"Felt252DictConcreteLibfunc",2192],[6,"Felt252DictEntryConcreteLibfunc",2192],[5,"FunctionCallConcreteLibfunc",2193],[6,"GasConcreteLibfunc",2194],[6,"MemConcreteLibfunc",2195],[6,"NullableConcreteLibfunc",2196],[6,"PedersenConcreteLibfunc",2197],[6,"PoseidonConcreteLibfunc",2198],[6,"Sint128Concrete",2199],[5,"Sint128Traits",2199],[5,"IntConstConcreteLibfunc",2200],[5,"IntOperationConcreteLibfunc",2200],[8,"Sint16Concrete",2201],[5,"Sint16Traits",2201],[8,"Sint32Concrete",2201],[5,"Sint32Traits",2201],[8,"Sint64Concrete",2201],[5,"Sint64Traits",2201],[8,"Sint8Concrete",2201],[5,"Sint8Traits",2201],[6,"StarkNetConcreteLibfunc",2202],[6,"StructConcreteLibfunc",2203],[6,"Uint128Concrete",2204],[5,"Uint128Traits",2204],[8,"Uint16Concrete",2205],[5,"Uint16Traits",2205],[6,"Uint256Concrete",2206],[8,"Uint32Concrete",2205],[5,"Uint32Traits",2205],[6,"Uint512Concrete",2207],[8,"Uint64Concrete",2205],[5,"Uint64Traits",2205],[8,"Uint8Concrete",2205],[5,"Uint8Traits",2205],[10,"Any",2159],[5,"DebugUtils",1071],[5,"ExecutionEngine",2208],[5,"EnumSnapshotVariantsMeta",1099],[5,"GasCost",1120],[6,"ApChangeError",2209],[6,"CostError",2210],[5,"StatementIdx",2143],[6,"CostTokenType",2194],[5,"PrimeModuloMeta",1251],[5,"BigUint",2211],[5,"ReallocBindingsMeta",1272],[5,"RuntimeBindingsMeta",1294],[5,"OperationRef",2179],[5,"SnapshotClonesMeta",1326],[8,"CloneFn",1326],[10,"Fn",2166],[5,"Arc",2212],[5,"NonNull",2213],[10,"StarkNetSyscallHandler",1430],[5,"TailRecursionMeta",1380],[5,"BlockRef",2176],[8,"SyscallResult",1430],[5,"Felt252Abi",1430],[5,"U256",1430],[5,"ExecutionInfo",1430],[5,"ExecutionInfoV2",1430],[5,"TxV2Info",1430],[5,"ResourceBounds",1430],[5,"BlockInfo",1430],[5,"TxInfo",1430],[5,"Secp256k1Point",1430],[5,"Secp256r1Point",1430],[1,"u32"],[5,"WithSelf",1849],[10,"TypeBuilder",1849],[5,"Type",2214],[10,"Clone",2215],[5,"Layout",2168],[5,"InfoAndTypeConcreteType",2216],[8,"Result",448],[5,"InfoOnlyConcreteType",2216],[5,"BoundedIntConcreteType",2217],[5,"EnumConcreteType",2190],[8,"TypeLayout",1938],[5,"PRIME",1942],[5,"HALF_PRIME",1942],[5,"BigInt",2218],[6,"StarkNetTypeConcrete",2202],[6,"Secp256PointTypeConcrete",2219],[5,"StructConcreteType",2203],[10,"ProgramRegistryExt",2008],[10,"Into",2220],[1,"str"],[5,"GenFunction",2143],[6,"Cow",2221],[1,"i128"],[1,"i8"],[1,"i32"],[1,"i16"],[1,"u16"],[15,"TypeBuilderError",309],[15,"LibfuncBuilderError",309],[15,"TypeBuilderError",377],[15,"Struct",2128],[15,"Enum",2128],[15,"Felt252Dict",2128],[15,"Secp256K1Point",2128],[15,"Secp256R1Point",2128]],"b":[[32,"impl-Display-for-LLVMCompileError"],[33,"impl-Debug-for-LLVMCompileError"],[90,"impl-From%3CAotProgramCache%3C\'a,+K%3E%3E-for-ProgramCache%3C\'a,+K%3E"],[92,"impl-From%3CJitProgramCache%3C\'a,+K%3E%3E-for-ProgramCache%3C\'a,+K%3E"],[261,"impl-Debug-for-Error"],[262,"impl-Display-for-Error"],[263,"impl-Display-for-ErrorImpl"],[264,"impl-Debug-for-ErrorImpl"],[267,"impl-From%3CError%3E-for-ErrorImpl"],[268,"impl-From%3CBox%3CProgramRegistryError%3E%3E-for-ErrorImpl"],[269,"impl-From%3CEditStateError%3E-for-ErrorImpl"],[270,"impl-From%3CGasMetadataError%3E-for-ErrorImpl"],[329,"impl-Display-for-Error"],[330,"impl-Debug-for-Error"],[331,"impl-Debug-for-ErrorImpl"],[332,"impl-Display-for-ErrorImpl"],[336,"impl-From%3CLayoutError%3E-for-ErrorImpl"],[337,"impl-From%3CBox%3CProgramRegistryError%3E%3E-for-ErrorImpl"],[338,"impl-From%3CError%3E-for-ErrorImpl"],[399,"impl-Debug-for-Error"],[400,"impl-Display-for-Error"],[401,"impl-Debug-for-ErrorImpl"],[402,"impl-Display-for-ErrorImpl"],[405,"impl-From%3CLayoutError%3E-for-ErrorImpl"],[406,"impl-From%3CError%3E-for-ErrorImpl"],[407,"impl-From%3CProgramRegistryError%3E-for-ErrorImpl"],[408,"impl-From%3CError%3E-for-ErrorImpl"],[409,"impl-From%3CBox%3CProgramRegistryError%3E%3E-for-ErrorImpl"],[411,"impl-From%3CLayoutError%3E-for-ErrorImpl"],[412,"impl-From%3CTryFromIntError%3E-for-ErrorImpl"],[465,"impl-Display-for-Error"],[466,"impl-Debug-for-Error"],[467,"impl-Debug-for-ErrorImpl"],[468,"impl-Display-for-ErrorImpl"],[471,"impl-From%3CBox%3CProgramRegistryError%3E%3E-for-ErrorImpl"],[472,"impl-From%3CError%3E-for-ErrorImpl"],[473,"impl-From%3CLayoutError%3E-for-ErrorImpl"],[474,"impl-From%3CProgramRegistryError%3E-for-ErrorImpl"],[475,"impl-From%3CError%3E-for-ErrorImpl"],[476,"impl-From%3CLayoutError%3E-for-ErrorImpl"],[478,"impl-From%3CTryFromIntError%3E-for-ErrorImpl"],[659,"impl-From%3CJitNativeExecutor%3C\'m%3E%3E-for-NativeExecutor%3C\'m%3E"],[660,"impl-From%3CAotNativeExecutor%3E-for-NativeExecutor%3C\'m%3E"],[1170,"impl-Display-for-GasMetadataError"],[1171,"impl-Debug-for-GasMetadataError"],[1175,"impl-From%3CApChangeError%3E-for-GasMetadataError"],[1177,"impl-From%3CCostError%3E-for-GasMetadataError"],[2033,"impl-Debug-for-LayoutError"],[2034,"impl-Display-for-LayoutError"],[2097,"impl-From%3Ci128%3E-for-JitValue"],[2098,"impl-From%3Cu64%3E-for-JitValue"],[2099,"impl-From%3Ci8%3E-for-JitValue"],[2100,"impl-From%3CFelt%3E-for-JitValue"],[2101,"impl-From%3C%26%5BT%5D%3E-for-JitValue"],[2102,"impl-From%3Ci32%3E-for-JitValue"],[2104,"impl-From%3Cu32%3E-for-JitValue"],[2105,"impl-From%3Cu8%3E-for-JitValue"],[2106,"impl-From%3Ci16%3E-for-JitValue"],[2107,"impl-From%3CVec%3CT%3E%3E-for-JitValue"],[2108,"impl-From%3Cu16%3E-for-JitValue"],[2109,"impl-From%3Ci64%3E-for-JitValue"],[2110,"impl-From%3C%5BT;+N%5D%3E-for-JitValue"],[2111,"impl-From%3Cu128%3E-for-JitValue"]]}],\
["cairo_native_compile",{"doc":"","t":"PFPGNONNNNNNHNNNNNNNNNNNNNHOOOOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNN","n":["Aot","Args","Jit","RunMode","__clone_box","allow_warnings","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","check_compiler_path","clone","clone_into","command","command_for_update","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","main","opt_level","output_library","output_mlir","path","replace_ids","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","single_file","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip"],"q":[[0,"cairo_native_compile"],[64,"dyn_clone::sealed"],[65,"clap_builder::builder::command"],[66,"std::path"],[67,"anyhow"],[68,"core::fmt"],[69,"core::fmt"],[70,"clap_builder"],[71,"core::result"],[72,"clap_builder::util::id"],[73,"core::option"],[74,"alloc::boxed"],[75,"alloc::vec"],[76,"std::collections::hash::map"],[77,"alloc::collections::vec_deque"],[78,"clap_builder::builder::possible_value"],[79,"core::any"]],"d":["","Compiles a Cairo project outputting the generated MLIR and …","","","","Allows the compilation to succeed with warnings.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Optimization level, Valid: 0, 1, 2, 3. Values higher than …","If a path is passed, a dynamic library will be compiled …","The output path for the mlir, if none is passed, out.mlir …","The Cairo project path to compile and run its tests.","Replaces sierra ids with human-readable ones.","","","","","","","","","","","","","","","Whether path is a single file.","","","","","","","","","","","","","","","","",""],"i":[7,0,7,0,7,10,10,10,7,10,7,10,0,7,7,10,10,7,10,7,10,10,10,10,7,10,0,10,10,10,10,10,7,7,7,7,7,7,7,10,10,10,10,10,10,10,10,7,7,7,10,7,10,7,10,7,10,7,10,10,10,7,7,10],"f":[0,0,0,0,[[-1,1],2,[]],0,[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5],[[6,[2]]]],[7,7],[[-1,-2],2,[],[]],[[],3],[[],3],[[7,8],9],[[10,8],9],[-1,-1,[]],[-1,-1,[]],[11,[[13,[10,12]]]],[11,[[13,[10,12]]]],[[],[[15,[14]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[6,[2]]]],0,0,0,0,0,[[-1,[16,[-2]]],[[13,[[16,[-2]],-3]]],[],[],[]],[[-1,[15,[-2]]],[[13,[[15,[-2]],-3]]],[],[],[]],[[-1,[17,[-2]]],[[13,[[17,[-2]],-3]]],[],[],[]],[[-1,[13,[-2,-3]]],[[13,[[13,[-2,-3]],-4]]],[],[],[],[]],[[-1,[18,[-2,-3]]],[[13,[[18,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[13,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[19,[-2]]],[[13,[[19,[-2]],-3]]],[],[],[]],[[-1,[15,[-2]]],[[13,[[15,[-2]],-3]]],[],[],[]],[[-1,[13,[-2,-3]]],[[13,[[13,[-2,-3]],-4]]],[],[],[],[]],[[-1,[18,[-2,-3]]],[[13,[[18,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[13,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[19,[-2]]],[[13,[[19,[-2]],-3]]],[],[],[]],[[-1,[16,[-2]]],[[13,[[16,[-2]],-3]]],[],[],[]],[[-1,[17,[-2]]],[[13,[[17,[-2]],-3]]],[],[],[]],0,[-1,-2,[],[]],[7,[[15,[20]]]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,[[13,[-2]]],[],[]],[-1,21,[]],[-1,21,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[10,11],[[13,[2,12]]]],[[10,11],[[13,[2,12]]]],[[],[[22,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",64],[1,"tuple"],[5,"Command",65],[1,"bool"],[5,"Path",66],[8,"Result",67],[6,"RunMode",0],[5,"Formatter",68],[8,"Result",68],[5,"Args",0],[5,"ArgMatches",69],[8,"Error",70],[6,"Result",71],[5,"Id",72],[6,"Option",73],[5,"Box",74],[5,"Vec",75],[5,"HashMap",76],[5,"VecDeque",77],[5,"PossibleValue",78],[5,"TypeId",79],[1,"slice"]],"b":[]}],\
["cairo_native_dump",{"doc":"","t":"FGPPNNNNNNNNNNNNNNNNNNNNNONNHHOHHNNNNNNNNNNNNNNONNNNNNNNNNNNNNNN","n":["CmdLine","CompilerOutput","Path","Stdout","__clone_box","__clone_box","augment_args","augment_args_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","command","command_for_update","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","input","into","into","load_program","main","output","parse_input","parse_output","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","starknet","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","update_from_arg_matches","update_from_arg_matches_mut","vzip","vzip"],"q":[[0,"cairo_native_dump"],[64,"dyn_clone::sealed"],[65,"clap_builder::builder::command"],[66,"core::fmt"],[67,"core::fmt"],[68,"clap_builder"],[69,"core::result"],[70,"clap_builder::util::id"],[71,"core::option"],[72,"std::path"],[73,"melior::context"],[74,"cairo_lang_sierra::program"],[75,"cairo_native::debug_info"],[76,"core::error"],[77,"alloc::boxed"],[78,"std::path"],[79,"alloc::vec"],[80,"alloc::collections::vec_deque"],[81,"std::collections::hash::map"],[82,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","Compile a starknet contract","","","","","","","","","","","","","","","",""],"i":[0,0,5,5,4,5,4,4,4,5,4,5,4,5,4,5,4,4,4,5,4,5,4,4,4,4,4,5,0,0,4,0,0,4,4,4,4,4,4,4,5,5,5,5,5,5,5,4,4,5,4,5,4,5,4,5,4,5,4,5,4,4,4,5],"f":[0,0,0,0,[[-1,1],2,[]],[[-1,1],2,[]],[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[4,4],[5,5],[[-1,-2],2,[],[]],[[-1,-2],2,[],[]],[[],3],[[],3],[[4,6],7],[[5,6],7],[-1,-1,[]],[-1,-1,[]],[8,[[10,[4,9]]]],[8,[[10,[4,9]]]],[[],[[12,[11]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[[13,[12,[14]],15],[[10,[[2,[16,[12,[17]]]],[19,[18]]]]]],[[],[[10,[2,[19,[18]]]]]],0,[20,[[10,[21,22]]]],[20,[[10,[5,22]]]],[[-1,[19,[-2]]],[[10,[[19,[-2]],-3]]],[],[],[]],[[-1,[12,[-2]]],[[10,[[12,[-2]],-3]]],[],[],[]],[[-1,[23,[-2]]],[[10,[[23,[-2]],-3]]],[],[],[]],[[-1,[24,[-2]]],[[10,[[24,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[10,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[10,[-2,-3]]],[[10,[[10,[-2,-3]],-4]]],[],[],[],[]],[[-1,[25,[-2,-3]]],[[10,[[25,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[10,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[23,[-2]]],[[10,[[23,[-2]],-3]]],[],[],[]],[[-1,[10,[-2,-3]]],[[10,[[10,[-2,-3]],-4]]],[],[],[],[]],[[-1,[25,[-2,-3]]],[[10,[[25,[-2,-3]],-4]]],[],[],[],[]],[[-1,[24,[-2]]],[[10,[[24,[-2]],-3]]],[],[],[]],[[-1,[19,[-2]]],[[10,[[19,[-2]],-3]]],[],[],[]],[[-1,[12,[-2]]],[[10,[[12,[-2]],-3]]],[],[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,[[10,[-2]]],[],[]],[-1,26,[]],[-1,26,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,8],[[10,[2,9]]]],[[4,8],[[10,[2,9]]]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",64],[1,"tuple"],[5,"Command",65],[5,"CmdLine",0],[6,"CompilerOutput",0],[5,"Formatter",66],[8,"Result",66],[5,"ArgMatches",67],[8,"Error",68],[6,"Result",69],[5,"Id",70],[6,"Option",71],[5,"Path",72],[5,"Context",73],[1,"bool"],[5,"Program",74],[5,"DebugLocations",75],[10,"Error",76],[5,"Box",77],[1,"str"],[5,"PathBuf",72],[5,"String",78],[5,"Vec",79],[5,"VecDeque",80],[5,"HashMap",81],[5,"TypeId",82]],"b":[]}],\
["cairo_native_run",{"doc":"","t":"PFPGNONNONNNNHNNNNHNNNNNNNNNHHOOHNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNN","n":["Aot","Args","Jit","RunMode","__clone_box","allow_warnings","augment_args","augment_args_for_update","available_gas","borrow","borrow","borrow_mut","borrow_mut","check_compiler_path","clone","clone_into","command","command_for_update","find_function","fmt","fmt","from","from","from_arg_matches","from_arg_matches_mut","group_id","into","into","jitvalue_to_felt","main","opt_level","path","result_to_runresult","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","run_mode","single_file","to_owned","to_possible_value","try_from","try_from","try_into","try_into","type_id","type_id","upcast","upcast","upcast_mut","upcast_mut","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip"],"q":[[0,"cairo_native_run"],[66,"dyn_clone::sealed"],[67,"clap_builder::builder::command"],[68,"std::path"],[69,"anyhow"],[70,"cairo_lang_sierra::program"],[71,"cairo_lang_sierra::program"],[72,"core::fmt"],[73,"clap_builder"],[74,"core::result"],[75,"clap_builder::util::id"],[76,"core::option"],[77,"cairo_native::values"],[78,"starknet_types_core::felt"],[79,"alloc::vec"],[80,"cairo_native::execution_result"],[81,"cairo_lang_runner"],[82,"alloc::boxed"],[83,"std::collections::hash::map"],[84,"alloc::collections::vec_deque"],[85,"clap_builder::builder::possible_value"],[86,"core::any"]],"d":["","Command line args parser. Exits with 1 if the compilation …","","","","Allows the compilation to succeed with warnings.","","","In cases where gas is available, the amount of provided …","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Optimization level, Valid: 0, 1, 2, 3. Values higher than …","The Cairo project path to compile and run its tests.","","","","","","","","","","","","","","","","Run with JIT or AOT (compiled).","Whether path is a single file.","","","","","","","","","","","","","","","","",""],"i":[7,0,7,0,7,13,13,13,13,7,13,7,13,0,7,7,13,13,0,7,13,7,13,13,13,13,7,13,0,0,13,13,0,7,7,7,7,7,7,7,13,13,13,13,13,13,13,13,13,7,7,7,13,7,13,7,13,7,13,7,13,13,13,7,7,13],"f":[0,0,0,0,[[-1,1],2,[]],0,[3,3],[3,3],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5],[[6,[2]]]],[7,7],[[-1,-2],2,[],[]],[[],3],[[],3],[[8,9],[[6,[10]]]],[[7,11],12],[[13,11],12],[-1,-1,[]],[-1,-1,[]],[14,[[16,[13,15]]]],[14,[[16,[13,15]]]],[[],[[18,[17]]]],[-1,-2,[],[]],[-1,-2,[],[]],[19,[[21,[20]]]],[[],[[6,[2]]]],0,0,[22,[[6,[23]]]],[[-1,[24,[-2]]],[[16,[[24,[-2]],-3]]],[],[],[]],[[-1,[25,[-2,-3]]],[[16,[[25,[-2,-3]],-4]]],[],[],[],[]],[[-1,[21,[-2]]],[[16,[[21,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[18,[-2]]],[[16,[[18,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[16,[-2,-3]]],[[16,[[16,[-2,-3]],-4]]],[],[],[],[]],[[-1,[25,[-2,-3]]],[[16,[[25,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[16,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[16,[[26,[-2]],-3]]],[],[],[]],[[-1,[24,[-2]]],[[16,[[24,[-2]],-3]]],[],[],[]],[[-1,[18,[-2]]],[[16,[[18,[-2]],-3]]],[],[],[]],[[-1,[21,[-2]]],[[16,[[21,[-2]],-3]]],[],[],[]],0,0,[-1,-2,[],[]],[7,[[18,[27]]]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,[[16,[-2]]],[],[]],[-1,28,[]],[-1,28,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[13,14],[[16,[2,15]]]],[[13,14],[[16,[2,15]]]],[[],[[29,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",66],[1,"tuple"],[5,"Command",67],[1,"bool"],[5,"Path",68],[8,"Result",69],[6,"RunMode",0],[5,"Program",70],[1,"str"],[8,"Function",70],[5,"Formatter",71],[8,"Result",71],[5,"Args",0],[5,"ArgMatches",72],[8,"Error",73],[6,"Result",74],[5,"Id",75],[6,"Option",76],[6,"JitValue",77],[5,"Felt",78],[5,"Vec",79],[5,"ExecutionResult",80],[6,"RunResultValue",81],[5,"Box",82],[5,"HashMap",83],[5,"VecDeque",84],[5,"PossibleValue",85],[5,"TypeId",86],[1,"slice"]],"b":[]}],\
["cairo_native_runtime",{"doc":"","t":"FNNHHHHHHHHHHHHNNNNNNN","n":["HALF_PRIME","borrow","borrow_mut","cairo_native__alloc_dict","cairo_native__dict_free","cairo_native__dict_get","cairo_native__dict_insert","cairo_native__libfunc__debug__print","cairo_native__libfunc__ec__ec_point_from_x_nz","cairo_native__libfunc__ec__ec_point_try_new_nz","cairo_native__libfunc__ec__ec_state_add","cairo_native__libfunc__ec__ec_state_add_mul","cairo_native__libfunc__ec__ec_state_try_finalize_nz","cairo_native__libfunc__hades_permutation","cairo_native__libfunc__pedersen","deref","from","into","try_from","try_into","type_id","vzip"],"q":[[0,"cairo_native_runtime"],[22,"core::ffi"],[23,"std::collections::hash::map"],[24,"core::ptr::non_null"],[25,"starknet_ff"],[26,"core::result"],[27,"core::any"]],"d":["","","","Allocates a new dictionary. Internally a rust hashmap: …","Frees the dictionary.","Gets the value for a given key, the returned pointer is …","Inserts the provided key value. Returning the old one or …","Based on <code>cairo-lang-runner</code>’s implementation.","Compute <code>ec_point_from_x_nz(x)</code> and store it.","Compute <code>ec_point_try_new_nz(x)</code>.","Compute <code>ec_state_add(state, point)</code> and store the state …","Compute <code>ec_state_add_mul(state, scalar, point)</code> and store …","Compute <code>ec_state_try_finalize_nz(state)</code> and store the …","Compute <code>hades_permutation(op0, op1, op2)</code> and replace the …","Compute <code>pedersen(lhs, rhs)</code> and store it into <code>dst</code>.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","",""],"i":[0,10,10,0,0,0,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10],"f":[0,[-1,-2,[],[]],[-1,-2,[],[]],[[],1],[2,3],[[2,[5,[4]]],1],[[2,[5,[4]],[6,[1]]],1],[[7,5,8],7],[[[6,[[5,[[5,[4]]]]]]],9],[[[6,[[5,[[5,[4]]]]]]],9],[[[6,[[5,[[5,[4]]]]]],[6,[[5,[[5,[4]]]]]]],3],[[[6,[[5,[[5,[4]]]]]],[6,[[5,[4]]]],[6,[[5,[[5,[4]]]]]]],3],[[[6,[[5,[[5,[4]]]]]],[6,[[5,[[5,[4]]]]]]],9],[[4,4,4],3],[[4,4,4],3],[10,11],[-1,-1,[]],[-1,-2,[],[]],[-1,[[12,[-2]]],[],[]],[-1,[[12,[-2]]],[],[]],[-1,13,[]],[-1,-2,[],[]]],"c":[],"p":[[6,"c_void",22],[5,"HashMap",23],[1,"tuple"],[1,"u8"],[1,"array"],[5,"NonNull",24],[1,"i32"],[1,"usize"],[1,"bool"],[5,"HALF_PRIME",0],[5,"FieldElement",25],[6,"Result",26],[5,"TypeId",27]],"b":[]}],\
["cairo_native_test",{"doc":"","t":"PFPPGPFGFNONNNNNNNNNNNNHNNNNOOOHHNNHNNNNNNNONOOONNNNNHHOOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Aot","Args","Fail","Jit","RunMode","Success","TestResult","TestStatus","TestsSummary","__clone_box","allow_warnings","augment_args","augment_args_for_update","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_compiler_path","clone","clone_into","command","command_for_update","failed","failed_run_results","filter","filter_test_cases","find_function","fmt","fmt","format_for_panic","from","from","from","from","from","from_arg_matches","from_arg_matches_mut","gas_usage","group_id","ignored","ignored","include_ignored","into","into","into","into","into","jitvalue_to_felt","main","opt_level","passed","path","result_to_runresult","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","rewrite","run_mode","run_tests","single_file","starknet","status","to_owned","to_possible_value","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","upcast","upcast","upcast","upcast","upcast","upcast_mut","upcast_mut","upcast_mut","upcast_mut","upcast_mut","update_from_arg_matches","update_from_arg_matches_mut","value_variants","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"cairo_native_test"],[134,"dyn_clone::sealed"],[135,"clap_builder::builder::command"],[136,"std::path"],[137,"anyhow"],[138,"cairo_lang_test_plugin"],[139,"alloc::string"],[140,"cairo_lang_sierra::program"],[141,"cairo_lang_sierra::program"],[142,"core::fmt"],[143,"alloc::vec::into_iter"],[144,"clap_builder::parser::matches::arg_matches"],[145,"clap_builder"],[146,"core::result"],[147,"clap_builder::util::id"],[148,"core::option"],[149,"cairo_native::values"],[150,"starknet_types_core::felt"],[151,"alloc::vec"],[152,"cairo_native::execution_result"],[153,"cairo_lang_runner"],[154,"alloc::boxed"],[155,"alloc::collections::vec_deque"],[156,"std::collections::hash::map"],[157,"cairo_lang_test_plugin::test_config"],[158,"cairo_lang_sierra::ids"],[159,"cairo_lang_sierra::extensions::modules::gas"],[160,"cairo_lang_utils::ordered_hash_map"],[161,"cairo_lang_starknet::contract"],[162,"clap_builder::builder::possible_value"],[163,"core::any"]],"d":["","Compiles a Cairo project and runs all the functions marked …","","","","","The result of a ran test.","The status of a ran test.","Summary data of the ran tests.","","Allows the compilation to succeed with warnings.","","","","","","","","","","","","","","","","","","","","The filter for the tests, running only tests containing …","Filter compiled test cases with user provided arguments.","","","","Formats the given felts as a panic string.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","The gas usage of the run if relevant.","","","Should we run only the ignored tests.","Should we run ignored tests as well.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Optimization level, Valid: 0, 1, 2, 3. Values higher than …","","The Cairo project path to compile and run its tests.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Run with JIT or AOT (compiled).","Runs the tests and process the results for a summary.","Whether path is a single file.","Should we add the starknet plugin to run the tests.","The status of the run.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[7,0,42,7,0,42,0,0,0,7,16,16,16,42,43,38,7,16,42,43,38,7,16,0,7,7,16,16,38,38,16,0,0,7,16,0,42,43,38,7,16,16,16,43,16,38,16,16,42,43,38,7,16,0,0,16,38,16,0,42,42,42,42,42,42,42,43,43,43,43,43,43,43,38,38,38,38,38,38,38,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,0,16,16,43,7,7,42,43,38,7,16,42,43,38,7,16,42,43,38,7,16,42,43,38,7,16,42,43,38,7,16,16,16,7,42,43,38,7,16],"f":[0,0,0,0,0,0,0,0,0,[[-1,1],2,[]],0,[3,3],[3,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[4,5],[[6,[2]]]],[7,7],[[-1,-2],2,[],[]],[[],3],[[],3],0,0,0,[[8,4,4,9],[[2,[8,10]]]],[[11,12],[[6,[13]]]],[[7,14],15],[[16,14],15],[[[18,[17]]],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[19,[[21,[16,20]]]],[19,[[21,[16,20]]]],0,[[],[[23,[22]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[24,[[26,[25]]]],[[],[[6,[2]]]],0,0,0,[27,[[6,[28]]]],[[-1,[23,[-2]]],[[21,[[23,[-2]],-3]]],[],[],[]],[[-1,[29,[-2]]],[[21,[[29,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[21,[[26,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[21,[[30,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[21,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2,-3]]],[[21,[[31,[-2,-3]],-4]]],[],[],[],[]],[[-1,[21,[-2,-3]]],[[21,[[21,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[21,[[30,[-2]],-3]]],[],[],[]],[[-1,[21,[-2,-3]]],[[21,[[21,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[21,[[26,[-2]],-3]]],[],[],[]],[[-1,[23,[-2]]],[[21,[[23,[-2]],-3]]],[],[],[]],[[-1,[29,[-2]]],[[21,[[29,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[21,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2,-3]]],[[21,[[31,[-2,-3]],-4]]],[],[],[],[]],[[-1,[2,[-2,-3]]],[[21,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[21,[[26,[-2]],-3]]],[],[],[]],[[-1,[23,[-2]]],[[21,[[23,[-2]],-3]]],[],[],[]],[[-1,[29,[-2]]],[[21,[[29,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[21,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2,-3]]],[[21,[[31,[-2,-3]],-4]]],[],[],[],[]],[[-1,[21,[-2,-3]]],[[21,[[21,[-2,-3]],-4]]],[],[],[],[]],[[-1,[29,[-2]]],[[21,[[29,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[21,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[21,[-2,-3]]],[[21,[[21,[-2,-3]],-4]]],[],[],[],[]],[[-1,[31,[-2,-3]]],[[21,[[31,[-2,-3]],-4]]],[],[],[],[]],[[-1,[30,[-2]]],[[21,[[30,[-2]],-3]]],[],[],[]],[[-1,[26,[-2]]],[[21,[[26,[-2]],-3]]],[],[],[]],[[-1,[23,[-2]]],[[21,[[23,[-2]],-3]]],[],[],[]],[[-1,[30,[-2]]],[[21,[[30,[-2]],-3]]],[],[],[]],[[-1,[31,[-2,-3]]],[[21,[[31,[-2,-3]],-4]]],[],[],[],[]],[[-1,[23,[-2]]],[[21,[[23,[-2]],-3]]],[],[],[]],[[-1,[21,[-2,-3]]],[[21,[[21,[-2,-3]],-4]]],[],[],[],[]],[[-1,[26,[-2]]],[[21,[[26,[-2]],-3]]],[],[],[]],[[-1,[2,[-2,-3]]],[[21,[[2,[-2,-3]],-4]]],[],[],[],[]],[[-1,[29,[-2]]],[[21,[[29,[-2]],-3]]],[],[],[]],0,[[[26,[[2,[9,32]]]],11,[36,[33,[36,[34,35]]]],[36,[17,37]],16],[[6,[38]]]],0,0,0,[-1,-2,[],[]],[7,[[23,[39]]]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,[[21,[-2]]],[],[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,40,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[16,19],[[21,[2,20]]]],[[16,19],[[21,[2,20]]]],[[],[[41,[7]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[5,"Private",134],[1,"tuple"],[5,"Command",135],[1,"bool"],[5,"Path",136],[8,"Result",137],[6,"RunMode",0],[5,"TestCompilation",138],[5,"String",139],[1,"usize"],[5,"Program",140],[1,"str"],[8,"Function",140],[5,"Formatter",141],[8,"Result",141],[5,"Args",0],[5,"Felt252",142],[5,"IntoIter",143],[5,"ArgMatches",144],[8,"Error",145],[6,"Result",146],[5,"Id",147],[6,"Option",148],[6,"JitValue",149],[5,"Felt",150],[5,"Vec",151],[5,"ExecutionResult",152],[6,"RunResultValue",153],[5,"Box",154],[5,"VecDeque",155],[5,"HashMap",156],[5,"TestConfig",157],[5,"FunctionId",158],[6,"CostTokenType",159],[1,"i32"],[5,"OrderedHashMap",160],[5,"ContractInfo",161],[5,"TestsSummary",0],[5,"PossibleValue",162],[5,"TypeId",163],[1,"slice"],[6,"TestStatus",0],[5,"TestResult",0]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
